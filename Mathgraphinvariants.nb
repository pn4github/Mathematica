(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    239511,       4443]
NotebookOptionsPosition[    238170,       4414]
NotebookOutlinePosition[    238578,       4430]
CellTagsIndexPosition[    238535,       4427]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  StyleBox[
   RowBox[{
   "Computing", " ", "Graph", " ", "Invariants", " ", "in", " ", 
    "Mathematica"}], "Title"], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "Start", " ", "with", " ", "a", " ", "clean", " ", "slate", " ", "and", 
    " ", "import", " ", "IGraph"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "\"\<IGraphM`\>\""}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", "\[IndentingNewLine]", 
   StyleBox["\t",
    FontColor->GrayLevel[0]], 
   StyleBox[
    RowBox[{
    "The", " ", "complete", " ", "list", " ", "of", " ", "invariants", " ", 
     "we", " ", "attempt", " ", "to", " ", "compute", " ", "in", " ", "this", 
     " ", "notebook", " ", "are", " ", "defined", " ", "by", " ", "the", " ", 
     "House", " ", "of", " ", "Graphs", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        StyleBox[
         StyleBox[
          StyleBox[
           StyleBox[
            StyleBox[
             StyleBox[
              TemplateBox[{"here", {
                 URL["https://hog.grinvin.org/ListInvariants.action"], None}, 
                "https://hog.grinvin.org/ListInvariants.action", 
                "HyperlinkActionRecycled", {"HyperlinkActive"}, 
                BaseStyle -> {"Hyperlink"}, HyperlinkAction -> "Recycled"},
               "HyperlinkTemplate"], "ItemParagraph",
              FontFamily->"Tahoma",
              FontSize->9,
              FontWeight->"Normal",
              FontColor->RGBColor[0, 1, 0]], "ItemParagraph",
             FontFamily->"Tahoma",
             FontSize->9,
             FontWeight->"Normal",
             FontColor->GrayLevel[0]], "ItemParagraph",
            FontColor->RGBColor[0, 1, 1]], "ItemParagraph",
           FontFamily->"Tahoma",
           FontSize->9,
           FontWeight->"Normal",
           FontColor->GrayLevel[0]], "ItemParagraph",
          FontFamily->"Tahoma",
          FontSize->9,
          FontWeight->"Normal",
          FontColor->GrayLevel[0]], "ItemParagraph",
         FontFamily->"Tahoma",
         FontSize->9,
         FontWeight->"Normal",
         FontColor->GrayLevel[0]], 
        StyleBox[" ", "ItemParagraph",
         FontFamily->"Tahoma",
         FontSize->9,
         FontWeight->"Normal",
         FontColor->GrayLevel[0]], 
        RowBox[{"(", 
         RowBox[{"click", " ", "me"}], ")"}]}], ")"}], ".", 
      StyleBox[
       RowBox[{" ", 
        StyleBox[" ", "Text",
         FontFamily->"Tahoma",
         FontSize->9,
         FontWeight->"Normal",
         FontColor->RGBColor[0, 1, 1]]}]], "If"}], " ", "there", " ", "are", 
     " ", "other", " ", "invariants", " ", "you", " ", "believe", " ", 
     "Mathematica", " ", 
     RowBox[{"should", " ", "/", 
      StyleBox[" ", "ItemParagraph",
       FontFamily->"Tahoma",
       FontSize->9,
       FontWeight->"Normal",
       FontColor->GrayLevel[0]], 
      StyleBox[
       RowBox[{
        StyleBox[
         StyleBox["c", "ItemParagraph",
          FontFamily->"Tahoma",
          FontSize->9,
          FontWeight->"Normal",
          FontColor->GrayLevel[0]], "ItemParagraph",
         FontFamily->"Tahoma",
         FontSize->9,
         FontWeight->"Normal",
         FontColor->GrayLevel[0]], "ould"}]]}], 
     StyleBox[
      StyleBox[
       StyleBox[" ", "ItemParagraph",
        FontFamily->"Tahoma",
        FontSize->9,
        FontWeight->"Normal",
        FontColor->GrayLevel[0]], "ItemParagraph",
       FontFamily->"Tahoma",
       FontSize->9,
       FontWeight->"Normal",
       FontColor->GrayLevel[0]], "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], "compute", " ", "please", " ", "let", " ", 
     "me", " ", 
     RowBox[{"know", ".", "  ", 
      StyleBox["I", "ItemParagraph",
       FontFamily->"Tahoma",
       FontSize->9,
       FontWeight->"Normal",
       FontColor->GrayLevel[0]]}], 
     StyleBox[" ", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox["make", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox["  ", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox["no", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox[" ", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox["claim", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox[" ", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox["to", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox["  ", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{
       StyleBox["t", "ItemParagraph",
        FontFamily->"Tahoma",
        FontSize->9,
        FontWeight->"Normal",
        FontColor->GrayLevel[0]], "he"}]], 
     StyleBox[" ", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], "ooptimality", " ", "of", " ", "the", " ", 
     "methods", " ", "below", " ", "and", " ", "welcome", " ", 
     RowBox[{"improvements", ".", 
      StyleBox[
       RowBox[{
        StyleBox[" ", "ItemParagraph",
         FontFamily->"Tahoma",
         FontSize->9,
         FontWeight->"Normal",
         FontColor->GrayLevel[0]], 
        StyleBox[
         StyleBox[
          StyleBox[" ", "ItemParagraph",
           FontFamily->"Tahoma",
           FontSize->9,
           FontWeight->"Normal",
           FontColor->GrayLevel[0]], "ItemParagraph",
          FontFamily->"Tahoma",
          FontSize->9,
          FontWeight->"Normal",
          FontColor->GrayLevel[0]], "ItemParagraph",
         FontFamily->"Tahoma",
         FontSize->9,
         FontWeight->"Normal",
         FontColor->GrayLevel[0]]}]], 
      StyleBox[
       StyleBox["I", "ItemParagraph",
        FontFamily->"Tahoma",
        FontSize->9,
        FontWeight->"Normal",
        FontColor->GrayLevel[0]], "ItemParagraph",
       FontFamily->"Tahoma",
       FontSize->9,
       FontWeight->"Normal",
       FontColor->GrayLevel[0]]}], 
     StyleBox[" ", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{
       StyleBox[
        StyleBox["c", "ItemParagraph",
         FontFamily->"Tahoma",
         FontSize->9,
         FontWeight->"Normal",
         FontColor->GrayLevel[0]], "ItemParagraph",
        FontFamily->"Tahoma",
        FontSize->9,
        FontWeight->"Normal",
        FontColor->GrayLevel[0]], "an"}]], " ", 
     StyleBox["be", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox[" ", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{
       StyleBox[
        StyleBox["r", "ItemParagraph",
         FontFamily->"Tahoma",
         FontSize->9,
         FontWeight->"Normal",
         FontColor->GrayLevel[0]], "ItemParagraph",
        FontFamily->"Tahoma",
        FontSize->9,
        FontWeight->"Normal",
        FontColor->GrayLevel[0]], "eached"}]], " ", 
     StyleBox["at", "ItemParagraph",
      FontFamily->"Tahoma",
      FontSize->9,
      FontWeight->"Normal",
      FontColor->GrayLevel[0]], 
     StyleBox[
      RowBox[{
       StyleBox[" ", "ItemParagraph",
        FontFamily->"Tahoma",
        FontSize->9,
        FontWeight->"Normal",
        FontColor->GrayLevel[0]], " "}]], "Phil", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"pneumiller", "@", "tundradata"}], ".", "com"}], ")"}], 
      "."}]}], "ItemParagraph",
    FontFamily->"Tahoma",
    FontSize->9,
    FontWeight->"Normal",
    FontColor->GrayLevel[0]], "\[IndentingNewLine]", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.856179877392543*^9, 3.856179898517951*^9}, {
  3.856258083671457*^9, 3.856258098631477*^9}, {3.8563398868987827`*^9, 
  3.8563399493975625`*^9}},ExpressionUUID->"fbdc603c-d5f2-4a03-87b6-\
82d48a114c5f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"IGraph/M 0.5.1 (October 12, 2020)\"\>"},
    {"\<\"Evaluate \\!\\(\\*ButtonBox[\\\"IGDocumentation[]\\\",BaseStyle->\\\
\"Link\\\",ButtonData->\\\"paclet:IGraphM\\\"]\\) to get started.\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.8561814417302136`*^9, 3.8562480216004553`*^9, 
  3.8562580585681057`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"29c705c8-6945-4b00-8773-8a054c442b4a"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.856179916675545*^9, 3.8561799861803527`*^9}, {
   3.856180087195142*^9, 3.856180178364207*^9}, 3.856180429338394*^9, {
   3.8561805519766026`*^9, 3.8561805540737157`*^9}, 3.8561806489734383`*^9, {
   3.8561807169705114`*^9, 3.8561807182845116`*^9}, {3.8562480381313815`*^9, 
   3.8562480830503936`*^9}, 3.85625808089444*^9},
 TextJustification->1.,ExpressionUUID->"c0f7471e-59d5-4c06-9f54-d7c8a1678db7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "A", " ", "\"\<{Complete Bipartit {1,3}}\>\"", " ", "graphs", " ", 
     "equivalent", " ", "to", " ", "a", " ", "claw", " ", 
     RowBox[{"graph", ".", "  ", "This"}], " ", "graph", " ", "will", " ", 
     "be", " ", "used", " ", "later", " ", "to", " ", "test", " ", "for", " ",
      "claw", " ", "free", " ", 
     RowBox[{"graphs", "."}]}], "*)"}],
   FontColor->RGBColor[0, 0, 1]], 
  StyleBox["\[IndentingNewLine]",
   FontColor->RGBColor[0, 0, 1]], 
  RowBox[{
   RowBox[{
    RowBox[{"ClawGraph", "=", 
     RowBox[{"Graph3D", "[", 
      RowBox[{
       RowBox[{"GraphData", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<CompleteBipartite\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "3"}], "}"}]}], "}"}], "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "\"\<Claw Graph\>\""}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EdgeInducedSubgraphFreeQ", "[", "g_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Return", " ", "[", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Subgraph", "[", 
           RowBox[{"g", ",", 
            RowBox[{"EdgeList", "[", "g", "]"}]}], "]"}], "]"}], ",", "2"}], 
        "]"}], "]"}], ";"}], "\[IndentingNewLine]", ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Determine", " ", "Algebraic", " ", "Connectivity", " ", "of", " ", 
      "grap", " ", 
      RowBox[{"G", ".", "  ", "Approximate"}], " ", "algorithm", " ", "is", 
      " ", "find", " ", "Laplacian", " ", 
      RowBox[{"(", 
       RowBox[{"aka", " ", "Kirchoff", " ", "Matrixx"}], ")"}]}], ",", " ", 
     RowBox[{
     "and", " ", "find", " ", "the", " ", "second", " ", "smalles", " ", 
      "eigen", " ", 
      RowBox[{"value", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AlgebraicConnectivity", "[", "g_", "]"}], ":=", 
    RowBox[{"(", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[ScriptCapitalL]", " ", "=", 
       RowBox[{"KirchhoffMatrix", "[", "g", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[ScriptCapitalE]", " ", "=", 
       RowBox[{"Eigenvalues", "[", "\[ScriptCapitalL]", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[ScriptCapitalO]", "=", 
       RowBox[{"Sort", "[", 
        RowBox[{
         RowBox[{"Abs", "[", "\[ScriptCapitalE]", " ", "]"}], ",", 
         "GreaterEqual"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[ScriptCapitalO]", "[", 
       RowBox[{"[", 
        RowBox[{"-", "2"}], "]"}], "]"}]}], "\[IndentingNewLine]", ")"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Generate", " ", "a", " ", "random", " ", "graph", " ", "with", " ", "A", 
     " ", "Watts", " ", "Strogatz", " ", "distribution"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SeedRandom", "[", "123", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g", " ", "=", 
     RowBox[{"Graph3D", "[", 
      RowBox[{"RandomGraph", "[", 
       RowBox[{
        RowBox[{"WattsStrogatzGraphDistribution", "[", " ", 
         RowBox[{"10", ",", "0.05"}], "]"}], ",", 
        RowBox[{"PlotTheme", "->", "\"\<Minimal\>\""}], ",", 
        RowBox[{"PlotLabel", "\[Rule]", "\"\<G\>\""}]}], "]"}], "]"}]}], 
    ";"}], "\n", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "A", " ", "graph", " ", "is", " ", "said", " ", "to", " ", "be", " ", 
      StyleBox["Ayclic",
       FontSlant->"Italic",
       FontVariations->{"Underline"->True}], " ", "if", " ", "it", " ", 
      "contains", " ", "no", " ", 
      RowBox[{"cycles", ".", "  ", "Approimate"}], " ", "algorithm"}], ",", 
     " ", 
     RowBox[{
     "perform", " ", "DFS", " ", "on", " ", "graph", " ", "while", " ", 
      "checking", " ", "that", " ", "no", " ", "edge", " ", "points", " ", 
      "to", " ", "an", " ", "ancestor", " ", "of", " ", "the", " ", "the", 
      " ", "current", " ", 
      RowBox[{"vertex", ".", "  ", "Complexity"}], " ", "is", " ", 
      StyleBox["O",
       FontWeight->"Bold"], 
      StyleBox[
       RowBox[{"(", 
        RowBox[{"V", "+", "E"}], ")"}],
       FontWeight->"Bold"]}], ",", " ", 
     RowBox[{
      RowBox[{"i", ".", "e", ".", " ", "the"}], " ", "same", " ", "as", " ", 
      RowBox[{"DFS", ".", "  ", 
       RowBox[{"I", "'"}]}], "m", " ", "not", " ", "sure", " ", "what", " ", 
      "Mathematica", " ", "is", " ", "doing", " ", 
      RowBox[{"internally", "."}]}]}], "\[IndentingNewLine]", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"acyclic", " ", "=", " ", 
     RowBox[{"AcyclicGraphQ", "[", "g", "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"See", " ", "function", " ", "definition", " ", "above"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ac", " ", "=", " ", 
     RowBox[{"AlgebraicConnectivity", "[", "g", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Calculate", " ", "average", " ", "degree", " ", "of", " ", "vertcies", 
     " ", "in", " ", 
     RowBox[{"G", ".", "  ", "Algorithm"}], " ", "is", " ", "shown", " ", 
     "below", " ", "as", " ", 
     RowBox[{"computed", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"avgDegree", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         UnderoverscriptBox["\[Sum]", 
          RowBox[{"i", "=", "1"}], 
          RowBox[{"VertexCount", "[", "g", "]"}]], 
         RowBox[{
          RowBox[{"VertexDegree", "[", "g", "]"}], "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "/", 
       RowBox[{"VertexCount", "[", "g", "]"}]}], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Is", " ", "graph", " ", "G", " ", 
     RowBox[{"Bipartite", "?", "  ", "Using"}], " ", "Mathematica", " ", 
     "built", " ", 
     RowBox[{"in", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bipartite", " ", "=", " ", 
     RowBox[{"BipartiteGraphQ", "[", "g", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Compute", " ", "Chromatic", " ", "Index", " ", "and", " ", "Number", " ",
      "of", " ", "G", " ", "Chromatic", " ", "Index", " ", "is", " ", "AKA", 
     " ", "Edge", " ", "Graph", " ", "Chromatic", " ", "Number", " ", 
     "Chromatic", "  ", "Number", " ", "is", " ", "AKA", " ", "Vertex", " ", 
     "Chromatic", " ", "Number"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"chromaticIndex", " ", "=", " ", 
     RowBox[{"EdgeChromaticNumber", "[", "g", "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"chromaticNumber", "=", 
     RowBox[{"VertexChromaticNumber", "[", "g", "]"}]}], ";"}], " ", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Graph", " ", "circumference", " ", 
     RowBox[{"calculations", ".", " ", "Brute"}], " ", "force", " ", 
     "algorithm", " ", "below", " ", "is", " ", "tp", " ", "find", " ", "all",
      " ", "cycles", " ", "and", " ", "find", " ", "the", " ", "one", " ", 
     "with", " ", "maximal", " ", "length"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cycles", " ", "=", " ", 
     RowBox[{"FindCycle", "[", 
      RowBox[{"g", ",", "Infinity", ",", "All"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"circumference", " ", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"cycles", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"Length", "[", "cycles", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Is", " ", "graph", " ", "Claw", " ", 
     RowBox[{"Free", "?", " ", "Algorithm"}], " ", "uses", " ", "Matlab", " ",
      "builtin", " ", "to", " ", "find", " ", "Subgraphs", " ", 
     "\[IndentingNewLine]", "isopmorphic", " ", "to", " ", "the", " ", "claw",
      " ", 
     RowBox[{"graph", ".", " ", "defined"}], " ", "above"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"il", " ", "=", 
     RowBox[{"FindIsomorphicSubgraph", "[", 
      RowBox[{"g", ",", "ClawGraph"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"If", " ", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Length", "[", "il", "]"}], ">=", "1"}], ",", 
     RowBox[{"(", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<There is at least \>\"", ",", " ", 
         RowBox[{"Length", "[", "il", "]"}], ",", "ClawGraph", ",", 
         "\"\<   in   \>\"", ",", "g"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"clawFree", " ", "=", " ", "False"}]}], ")"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"\"\<Graph has \>\"", ",", " ", 
         RowBox[{"Length", "[", "il", "]"}], ",", " ", 
         "\"\< subgraph isomorphisms to  \>\"", ",", " ", "ClawGraph"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"clawFree", "=", "True"}], ";"}], "\[IndentingNewLine]", 
      ")"}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Find", " ", "cardinality", " ", "of", " ", "largest", " ", "clique", " ",
      "in", " ", "G", " ", "Using", " ", "Mathematica", " ", "built", " ", 
     "in", " ", "to", " ", "find", " ", "all", " ", "cliques", " ", "and", 
     " ", "then", " ", "pick", " ", "the", " ", 
     RowBox[{"biggest", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"allCliques", "=", 
     RowBox[{"FindClique", "[", "g", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cliqueNumber", " ", "=", " ", 
     RowBox[{"Length", "[", 
      RowBox[{"allCliques", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Determine", " ", "if", " ", "graph", " ", "G", " ", "is", " ", 
      RowBox[{"connected", ".", "  ", "We"}], " ", "use", " ", "the", " ", 
      "built"}], "-", 
     RowBox[{"in", " ", 
      RowBox[{"functioin", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"connected", " ", "=", " ", 
     RowBox[{"ConnectedGraphQ", "[", "g", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "For", " ", "graph", " ", "density", " ", "we", " ", "use", " ", "a", 
      " ", "built"}], "-", "in"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"density", " ", "=", " ", 
     RowBox[{
      RowBox[{"GraphDensity", "[", "g", "]"}], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "For", " ", "graph", " ", "diameter", " ", "we", " ", "use", " ", "a", 
      " ", "built"}], "-", "in"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"diameter", " ", "=", " ", 
     RowBox[{
      RowBox[{"GraphDiameter", "[", "g", "]"}], " ", "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "For", " ", "graph", " ", "edge", " ", "connectivity", " ", "we", " ", 
      "use", " ", "a", " ", "built"}], "-", "in"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"edgeConnectivity", " ", "=", " ", 
     RowBox[{
      RowBox[{"EdgeConnectivity", "[", "g", "]"}], "//", "N"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "For", " ", "graph", " ", "Eulerian", " ", "check", " ", "we", " ", 
      "use", " ", "a", " ", "built"}], "-", "in"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eulerian", " ", "=", " ", 
     RowBox[{"EulerianQ", "[", "g", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "I", " ", "need", " ", "to", " ", "find", " ", "a", " ", "way", " ", "to",
      " ", "compute", " ", "graph", " ", "Genus", " ", "with", " ", 
     "Mathematica", " ", "or", " ", 
     RowBox[{"IGraph", "/", "M"}], " ", 
     RowBox[{"or", " ", "?"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Genus", "=", "\"\<Not Available Yet\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"Using", " ", 
     RowBox[{"IGraph", "/", "M"}], " ", "built", " ", "in", " ", "to", " ", 
     "computer", " ", "Graph", " ", "G", " ", "Girth"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"girth", " ", "=", "  ", 
     RowBox[{"IGGirth", "[", "g", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "For", " ", "graph", " ", "Hamiltonian", " ", "check", " ", "we", " ", 
      "use", " ", "a", " ", "built"}], "-", "in"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"hamiltonian", " ", "=", " ", 
    RowBox[{"HamiltonianGraphQ", "[", "g", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "Using", " ", "Mathematica", " ", "built", " ", "ins", " ", "to", " ", 
      "find", " ", "the", " ", "largest", " ", "independent", " ", "vertex", 
      " ", 
      RowBox[{"set", ".", "  ", "This"}], " ", "is", " ", "a", " ", "brute", 
      " ", "force", " ", "algorithm"}], ",", " ", 
     RowBox[{"not", " ", "very", " ", 
      RowBox[{"scalable", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iset", "=", 
     RowBox[{"FindIndependentVertexSet", "[", 
      RowBox[{"g", ",", " ", "Infinity", ",", " ", "All"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"independencNumber", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Length", "[", 
         RowBox[{"iset", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "iset", "]"}]}], "}"}]}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"The", " ", 
     StyleBox["index",
      FontVariations->{"Underline"->True}], " ", "or", " ", 
     StyleBox["spectral",
      FontVariations->{"Underline"->True}], " ", 
     StyleBox["radius",
      FontVariations->{"Underline"->True}], 
     StyleBox[" ",
      FontVariations->{"Underline"->True}], 
     StyleBox["of",
      FontVariations->{"Underline"->True}], 
     StyleBox[" ",
      FontVariations->{"Underline"->True}], 
     StyleBox["a",
      FontVariations->{"Underline"->True}], 
     StyleBox[" ",
      FontVariations->{"Underline"->True}], 
     StyleBox["graph",
      FontVariations->{"Underline"->True}], " ", "is", " ", "the", " ", 
     "greatest", " ", "eigenvalue", " ", "of", " ", "\[IndentingNewLine]", 
     "its", " ", "adjacency", " ", 
     RowBox[{"matrix", ".", " ", "Algorithm"}], " ", "finds", " ", "the", " ",
      "maximum", " ", "eigen", " ", "value", " ", "of", " ", "graph", " ", 
     "adjancy", " ", 
     RowBox[{"matrix", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"am", " ", "=", 
     RowBox[{"AdjacencyMatrix", "[", "g", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"evsam", "=", 
    RowBox[{"Eigenvalues", "[", "am", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sr", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"Abs", "[", "evsam", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"The", " ", "Laplacian", " ", 
       RowBox[{"(", 
        RowBox[{"AKA", " ", "Kirchoff"}], ")"}], " ", "largest", " ", 
       "eigenvalue", " ", "of", " ", "a", " ", "graph", " ", "G", " ", "is", 
       " ", "the", " ", "largest", " ", "eigenvalue", " ", "of", " ", "its", 
       " ", "Laplacian", " ", "matrix", " ", "L", " ", "defined", " ", "by", 
       " ", "L"}], "=", 
      RowBox[{"D", "-", 
       RowBox[{
       "A", " ", "where", " ", "A", " ", "is", " ", "the", " ", "adjacency", 
        " ", "matrix", " ", "of", " ", "G", " ", "and", " ", "D", " ", "is", 
        " ", "a", " ", "diagonal", " ", "matrix", " ", "where", " ", 
        "Di"}]}]}], ",", 
     RowBox[{
     "i", " ", "is", " ", "the", " ", "degree", " ", "of", " ", "vertex", " ", 
      RowBox[{"i", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"le", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"Abs", "[", 
       RowBox[{"Eigenvalues", "[", 
        RowBox[{"KirchhoffMatrix", "[", "g", "]"}], "]"}], "]"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "The", " ", "longest", " ", "induced", " ", "cycle", " ", "of", " ", "G",
       " ", "is", " ", "given", " ", "by", " ", "the", " ", "order", " ", 
      "of", " ", "the", " ", "largest", " ", "induced", " ", "subgraph", " ", 
      "of", " ", "the", " ", "graph", " ", "that", " ", "is", " ", "a", " ", 
      RowBox[{"cycle", ".", "  ", "I"}], " ", "have", " ", "found", " ", 
      "this", " ", "algorithm", " ", "at", " ", "the", " ", "link", " ", 
      "below"}], ",", " ", 
     RowBox[{"but", " ", "my", " ", 
      RowBox[{"code", "'"}], "s", " ", "performance", " ", "is", " ", "very", 
      " ", 
      RowBox[{"poor", ".", "  ", "Looking"}], " ", "for", " ", "a", " ", 
      "better", " ", 
      RowBox[{"implementation", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"imAlgorithmChordlessCycles", " ", "=", 
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
Ek8jdJ0XRmi57phSqfg4TwGHZSI/exMBOq3RZDvHhs4s+5LHzhIQKLcS4jyR
CUdnShyuodc7V/axQNLF72r2Dv5YXIBVibAQFbHr1OAfzXuNve5wSqeVX8ao
psudV3IQ5kXIdcpAaAjjWc9kaiQm9shljl8be7pcP2U8Otg043X8RwjzyFou
hV4tT1Dvtvd/TScjhGvz4382s/NfUmZgMZH7lDn+TNB1XgpKLpuNFf/HTQ1m
6zuJx4Xe5lvIrzY0NVZvlgEQTOShu3c/Ifug4Oa9KldXYo3sel1mcCB639Gm
ayK/V5jVU/SOFbp+mOjEn9p2nfLMJk4/RrstyvUm/liQfWDJ+lKQYhs3c/Vw
Lo6kNHdJxa2WwJ9+IXOvKnvX5/BytI/97sWsagAAAICdQVjUKW3xdGbO17s3
vWtf5C+MecV5mLnbJxvEDvS+AX/6UHd+4RKhKFyCSmY18Hshi03qz6bRkNMs
xoXq24YCCgGEtVnPKXG4D2EcGJlP77Nv0oG/u91u15/PmfZKOvjxs3ixMn6h
hagz9l6fWFoXwmXCoQ46J/mo2Ss68KXbfd3lsLVqpRGCjHpgosvP6IQn3r56
ac13UEE63bPlqEJjZMZ5EvEoYdiD+IHSVM9KK//y5/+3K+ePNUqLz8Z5ZA8b
7x/d7s04bKJXTjSeuMgO9xACisyLB5eOSgKKxv7RQtcQLkbxcZ5FrzU9/llo
How8rH5PJi/1dkco3+Qe+RGT87DXqa7LNZne6Hz/XUO855nPdWbMiwnqODs4
TGd1T2dOn9lcGf2Qvb90Jz10aqRn8yfnweYe77PEZwst0v7x5d/ua//ThOTS
3px2Ha5Jv2WEIA/R0OOZTRszxky5DgnNmzs5j1gbde3On5WuPeHjNETbp0GZ
gRzrM64uxepiZjwn9JqaLuejzHaMzXmsNUrLRRW9Y4WuHzYw0mx2PRIqdDXk
aBeeMJlb/+K17s51FcXmRwbYOLnCI5rLtCxbfhW3WgI/91l7yJV3LuSUVmsd
DG5tvCWxRJdm/2Bwh+ZlBwAAAHijsL2tera71DeSmsJDGkIRNfeNPi/8M/KJ
8zwf7WtObiKfUiMapjqS2zRw49KZF+Fbl8722R23Hia7CcziONmejElkD08J
Oaj5bm+3e1phBhMz4+qUnsW3dwZbtI29txMDDzaCg6mrlGWGDl747ZJzzPrL
aXogoqT8PB/959iFlpoDfZ6fMnpSqVWaPds289jVWS8p0hf/HM/zsM19w/fc
3Y3yI6ZWfDbJLD3ikGsLcqoWHeeRH9xUWOvkxKwFyN3iwUta6k6WmNhEaTCS
EOfJ/eN+dNpt5WYAKgfo+MhYWi5f5lVwaG/taR8/tWQjOTAvPWmtWBh26IYn
UVpmYWyglb3B06LTQqmSl1/u5DxCsCJLPCQ25e7Wy5VNlCViwJ2pfJKW6LTX
3sbGfmUvv+J3rMz1w30jSKfHivG0Zkco87z58SFZmoCJhq9yI3lkn7qRsPsM
FxiXnUmk2lbjd+fXMpC/PuV3SWm1LV8pXniyqTBTGQAAAAAUin+blc8hsP7A
0ZKeJ6em21N4asg84jypnX2FtZ6Zl6Nn65JbKc3IYNbDlCTKo6m3+7Omh+De
9pOUs1/yv3jyn/6OpaNG0uvZDFP7pDUlkzWigDxF5Yzz1OzW797VSU3I5SpN
q1Jiz2BQeQBH6mH3d1la9uR5WK1+j7ax35cxVorb9mdnu3TbPMaQlKzoOI84
W0QijwwwhUmJkpV/3fNkhetPeGbkLvW1KeeRnJcoe6M9unqIjc4QDSdvKz4W
xLpOWeWZ7adLHiZit11mBWpmfoTsbNIZ3x0aeco10sbS6LlG7spWmDsjhoby
aBqxNhTTvKw+cibmsCp9XPwgTz3duxQCGomoWn2n63H60cWHnvxHF71jha6f
56N9v9plHxNrQLwXZJc13wg5mrM2AbNyj2zhar7G4soYCZZMoy27JJx6Wy1h
wWdjQ0yFfF1W+K7PQbhl6gf8WxtfAgAAAIAKWPbbDezbXculkEwOgVfTrmMZ
ndqjzslCO7W54xtCp4CnlHkmtXuuNF8mdWhQHokl03r9kilXqVLiPJr0FAri
GAOWbEKSKsV5NNlGNKWfu8UzX4HDajQNXYprH6cddismDhQ/byullTm6E67J
8s6rmvVYxAFmDRbPbFkPnpx6ppw5hM/Pk6Na+Nw7mhxzTMS6lnYh2SS6uuSM
G2babU4kBn/LEcrV+uL0FsXM8OKApdzJecTaUErzwi+Nne3j1mjvmUaloBkf
kZCbXsSmoa5j01J9/lAmWFr0jhW6ftjxOdL65OYuKVayGDxXaoKV4OBBrlrr
WgZ/yLx/kt8Isgn2Vdtq/MklYkEFLfgubbWtXyleGGva6ZKN/AIAAADANiIs
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
TIHrn2ZanXB0NJPflfMrBgAAANRs8yG1rzb99aT4IRCyLz8Zs8DEV8Tc70XK
b1NphVQ8pry0l1OlvbXkXTp4gzTv5dMgJt60Ez9KJjeK93fuzsj+6qe+M01i
aG9Po7BV3T7H/VfZ2zYPzOJwb0Na+KlW3/qOjaTcvkCYzhIRy8T2Pc3ssBxD
762paOprNhO5T5n3xItt7P862U2I0qEA757Tyk8gbCW9gTQ/hOhS33ZTfmmt
7rpycpjIA1dPC6HZY6Z+WMroRjHRx97+A2zPi7yT2sliovRDoZa+JFsTVfgW
6b0nqb3g1HIpQRNuebKG41TwedpRmEjwUqcufpPpzFfD0ay/XFcvziNUrIYw
fuCWGfGyEZn09Bn3dFIT6RNfUwqzOE6auzKahlkZG2hiryqi7U8TyjVQbOMm
N4lFHo+QbxNCcdbnbv/6oH2YZgdvbIQczcJlLZNQPfZ0hDzCNpLxrGdyJePo
7OrPLS1nLp/vTBy75DhP4Q8B7tDsNVbTTo4vyp0/E5v19LCPqbSHcHF7Fang
C4l9uI37ff9+xX44GcgmWqwXr3lHJ+i0qolO+91/tBqEOdSEsfuTv9zO2Kz4
i/m1CpuvSKp9VKZ8xRDHXNOlfz8DAADAm2TNb6/PCA2UOc6T8T62SQf+7na7
P798ztxIZN3y9WYkfCe+6XXnhZ7W1GTRaYVkosvP6IQn3r6Uc+qggnS6Z8sp
b518ia5/dl4I6fCvV1ptfeJ1+rLwyzX3YbHl8PDFE5LCE9q2j310xih39Z2p
pK1S40Xlmd+0sTJ+oUVxoBGhNZi4QVA5B8OL61jVNA2MZfYnJdOm5LMWJE+u
IvO21iadR8WzrOn2FLsGSmXEptzd+hzrf0UnKDaoUtdC3pOr3tfJyQiZowVK
wEUCGxQSTYhtWmccuJtt5bJqxXn4io1XrYn6p0wfM95nvNZ3iB1olxn6SxZm
4LZvoF2+acQRcXqbbyFrGUps3NfMlLOdr5v/GLUfH/DzferNSedB/srOSK3G
PBOG+ljd00oJ3NZmPaeE51eJcZ5iHwKr35NNNVnvysQahakP4eL2Kk4pF5Jk
mEe93a88sYpZD11qYWM4v/VOv5Q5p1LK8Fp9zVcc9T4q1f0VAwAAAOpHu02Z
3fEyx3mU3/aZx67OesmWWd7cmDX/gHTTLIVMH/BSyOkwM67O1NIrvie/XqO9
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
5M5lgrdmY7vj80svJb6q6bdjobW0d1RcO8ofAmkBZ4PIqjkuyLwr+JDdX2VP
YUPK8GbJbMzKErkoL4Nmqy9r2nxUCpaQYCfRrk/tuqHSXhd9PON19JgPGZo/
GI9X2WbQ2WKQlZxH5Z4AAAAAaBu9HvZ/NXKhpTI9gJCIIbSeNu/557LKprdG
vvpRcFAvS2wt5Pdc+/jtTsvpploD/1nNnW8P30zGClILxZky8CyvU7PCoQJm
cO11XenvbEu8J/OGl696gysSM6RCeZiZHtT4Fx/3v9acKBuprz1p6ez/0PHl
rZlw5ixE2vymTAfy7yOdx/RkVfPAHxUswRL5Ykz/XNfmvM92bmOPA5TNUlVG
kFVNb1wedv7hpic+sI0PEP7Dae9pqoz/+1FZEY/YI/+1N816Mj5OaLffmJie
C8fN3bnlHukxV2ZYNcTvQyRNXVfHg/Ph8Oyks8tsGrwlsP4nF7Gn01++317H
XnmysuG1tz92Up6J79kBkdvl+KDPWq8nayxM2CtDogoV0dHQxHBHVfzKVZ2x
MVfuYfzKzQenPFf7mwwkoX+5/7rAOj226ZVVmk+1CmoyW3PK6b0VmfWkhTqZ
+6iVe57Ey3PzbjJYGh9e+V2Dnc211bWt54fcd5aZcrINjKw0n95fqlr9noS6
mV+WA75NMhGSTz1+pmXFG+X0rf8Y6TlRxQ2yki8VLQwbiU0Gbpl9H8KvYsos
kMsru8pNZDUR/iSmHppqGzKfPRRb8Dm6a+MfXdv9qffOg5X48287uvxL4M+f
9phrm21joehaMg/z3gdplrWj7CHABQoqGoZuBSc/sdad7HH8OfDLEvuU3o6u
PAxO3rBZanRcRD3Xv8qNgoaUCZuNmcycgTnHMmi2+nKiyUflng9L+4khDLWt
PTbH5+xPqn9qwnPT5fiw71ydXqc3dw/d/ClZVGZD/cVf/V7GLix1ewIAAABQ
EuhY5MH0rdHr8bFq55m08A47QLP2DNgd1z1/n54XnmAqSUrPVYeErWXvb191
/bxrj1hsbT7wDcU2HnYwz/SKLZ1vf+zy3lYQ8aBjK/cnqeH+zhZ2kVK87bV0
Dji+8j+UEWHbXAn+7epAJxugK6ts6LRRP+Urz6TQl+XuEepvgflIUZoRHwDk
Lh0ThToXHyK4v5tdEd7MVwhcqNP+ppW5SqS+zjpw9W/BIpYnG8zOzfHUhY23
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
Janjp1rTcwiI4lYgqL2WLPc4jzabgXbaQKbCKGwGcsXHaM7XquIVo2/scXiD
K0VaR8PvsCCbh6c1cmgRh9+6Jdb4+YBJxpMH6Wj4rt8/5fPe+LjTxO+cruv5
3ZfM7+/dsEB0i28SZXX2f6RCNsz9csLmX8305qSh+ZJzdGLK7/9xboV99/Xw
zI9+/6SX+qizlm9Rh5sHPmPLEJhbUXpEdH7u6x1tPVQVKOwNFa/1Gf+Eh7pq
72pIiygcbur7HeX9PvhE9IrRkfnb8eYyMXr909+0VpWlXed4Y7g6OvE90xkM
Pknbhrc0ZWMiPWUdu+M2sacBh7WaWcL0OLF2hY/zMD20430TTwU+nt8wJb/L
kU33Ur3H+17yOpBpUeK8NDYAACgybrZrT0hnt6Za9pdAaol1tlanbMfjYz59
7UnRT99TDL3Fmf0+Ji43clbBjdjT6S/fb68zsL+GhtrWHpvj85sepoM6NeG5
6XJ82HeuTq/Tm7uHbv6U3ObM/Fhf/NXvs1kLm8jBWJuvJJDJo1jIE07tL9XN
Lc7DRBaoNqPEAhJ6+dZgXYWh9aPxn59G6e1oeMrV22jq/0uYqcdEr5us+83o
7GqMji7PfU8NvlLV8I5XehTA/OG3Q+31erKqqe9j+2tN2ayOS0y/ErqGy38K
LsXi7xmZD3jsrdWnbeMPY/xis6q3vYsbsci90f4T9bbv1gTGcjkXZm9JtuMX
Yoq63Fx9xv77d5q4YZusPFTcfgRjm8pZglXIz6PRZqCdNiBQmKybgSKbywFX
r5ldHamvtw78G+X1B+cfrUQL+ORK5lk1CV/bYkps3ZI4FYhbP0OeybRpi01D
RFaaTyvpACSbBEGauq6OB+fD4dlJZ5fZNHhrmZbx5oyTtXoyuWJhnmrVC7+K
KUY2a4zzc1/vaOmhqlThbqit6eGXSLbL1MRXaXIykazrGxc9CSr5h3v+Nu50
Uy3XDSur6v3LriO7Yg/G+uP9ySOWkclw/LvE1uYDox9bTaZeKshMDiYDaLpz
1+4/o6MPfSPnaoTzLvL7NBVtmsuqe6na4303uR3I+Ptfa2fCaKTe/GpnU2Px
ztgFAADIEb3uu3wo63BBHNNz+IZyfNDXeab1tLmS5CJU7T0Ddke8q/TzolrL
+RORjWqpJJC5op/4hjot529KLU3XhlzjPDuxRU+PgahodMyITFbRseU77qE3
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
AACSVv02Jm8AecI5u6tnGAnYXxbtkT7/yV6jI8jTztnino27Mes8TWpwxBRb
np28YevqvOx9qN4IAjWVB+rXVIlWk1YrqDjyGecpfl1rR8Fa3Xb0yT2/l3LY
3+nrPJM4w+q/vfzS//m/EP/TIdP/+98S/2J96xPfozzEfKJBR1MyOU/j8IzC
5UtMXq9XnHOZWwviPAAAAADASa492JeIkhmMtDiCUcE/YnNXaiLZIz3nbIwX
3/j2xJo2+rWxpaDX0WM2smPEk5cnVJspRk2pLD81VbrVpLkKKqb8xXk0Udfa
kfdWR6+H/ZStvV5PyKA/1k3dU39pUdbJeTgbvgGDRF6vFMR5AAAAAIDFTacS
+xJRMoORI22UyFEobO5KeZkh8277rqO+jCAqe7xPilsQOvrQ/9VIMm7Q2OPw
BldUHDGgplSTz5oq5WrSTAVpQP7iPNqoa+3IY6vbjs6PD1uPssdVGc1dH1wb
/fv0XHglyl14bo3NMZt/Ve3P3Udmch46uroaFXhChKlWvc0vfkwfD3EeAAAA
AGBwOwj2Ty7TIarteK9XJDlloteqfP15XqzPDDMTwmU93rUilYCJG1A2S1VZ
fiI8LNSUGvJeU6VdTcWvIM3IW5xHK3WtHXlqdRvhySutBpIgDjcP3vCH1/fe
etytWjMUeJ7vZVUyk/PQzwNDLwlFgeh5V3Oza15GMRHnAQAAAAB+B8G+yWV6
3f9eTaMjuCnYs0z2WhWtP489DlDvdzZUkmRlQ+cH7uCq1F/GloITX7tvzUZk
vf32mvdNZuR06LJvX18+z+jYSnD883e4uAFZdcZG/RCKyJh2Vf5BhaupHW6n
w82h3tZaPUnoa5u7bC5fKG2aeSsy942jzxL/33hlnuv9yD39VN53PvA1pekb
6qvvQkJrBdLlr4Li1//+JDXUa21iGhVhqG2y9tqvjweXJOtgOxL8xuUYstne
Hehpb21tPW2uJFupcOJ/N1eCf3Paes/F/5GJx8Tf8k27a1x+4I6OPp4Z/+Lj
/s5W9h3Yxsy+QYzOW5xHa7ekQiXT6jbCY5fqmIZ2dmTqkdClYG7J6gKtqpKZ
nEc8f5fYOp99EOcBAAAAgJ2dFd9ALdspbNqVNmQz6Gw5Jrr2IDn9SsibYYyj
I7cdlmOt9r/Eh2D0+u2RxgpC1+r4T7HTQzZCrrO6DF3i3e8/72pW8no1MHED
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
sqPDM+rOb+860clQ1/5eoc/sLkJNpePTC5OHbVMyjoLO6IDWlCZvqKyyuKha
QZs/u9q4jLzV3Z4F4dooQh5mOdud8hLn0eQtqYjGWx2XO8hsDwhcXhlZmlWV
npwnm2PRtpYnLlWZRmY2lfzh5oyjsYL9FS1YOAsAAAAANIGO/uLpP07KGFoJ
W3RbmT82Wt0LCv6KH4CJ7sla9Q0c3TcK216btDWPZAz7JDJCZDHKloWJIdwc
6mpgv0FZlcVWmBhCcWpqlzW/zcR+vljO1c2w+80OBVsSDmBNafWG4rO4HB3w
rcp+XxUriNl1wgUFyEZHUGy4KhDnic55/s3pf7rrZTnHeVKJZYiKZtcvmRpF
XuI8mrwlldB6q6OfT4/Uk6Sxd2xp7/ffXKA6dKIXLQ/SkvPoOj2K8ygxEZsj
SreY0SFXC/ckkj5cHgAAAAAOFjpy22Gpqeu/8eW79VkOSxNdfflnqbASAxzx
vQbbdx31XLe4zTXPT0SuzwyfypzZgL7nbCyPjxKO2AP5TFexucKkg2nkYwg3
Ju+v5C37QdFqKl2qUl5xzgmtHaDnXC1mBTsLDlxNafeGyi6Li5oVxOfjlVqh
l1pmk7p2Eb/NvDe6knucZycSsJsTyyv6Jp5lKHx+4jwavCUV0X6ro+fdHZUE
ecIe2J32mLksesL49oSyzG/ZlyMtOU8W1b1+39mmK3tDabai1IljRdjTBwAA
AADFkRyT/iUcS2ySkjoERFRi+CZjrJSGn7UXGH+x+JOy0/v6zKDmVObMBonM
n4c7PY/klyhb6TEEUm/udXiDqscQCl1T9OrM9YtNlfrK5g8mFlOD6NTssHD8
gt4MOhpr3vMLZ8MQcrBqSss3FB2mLFzdKcp2pWIFpWIuEqGS2GN34r7Pf5xn
h16g2rgPE03hwuOXF6oa59HALUlH7n419KbV0jXo8i8qvR203+p26Oj0Jw0k
QZo+mFpLBUm2Z50nSPLQwGT2eZGUSU/OozQd09ba1AemrEqbVZyHjoV9zoEu
i/WtkYmHOJYLAAAAoNRsLXt/2z50K8z27RPT6M2uecHeeOzR1Eh3r3CvO9mD
zaYnLzZAiIZcVm4Elr50nxnUHM28/jy5JCCrXJdZ2o4y6WDOVJH5iCEUuKa4
Y2g46TtK1oOOUyQhPmpjps7NHW7hcgk6WDWl5RuKrztlWVzUrKCtgP0I13zE
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
Bm0Ddk9wTcZ7C3pKNkr21GHuJtV0EFQKhl57OkV9PDpwsaWWL2NcVdtyzjxg
sVOTgeWo8kGN5KMv9xzVVcBuvCl8nEeR4jz8e1g1RONzKzrOwy8XIjTdLiXq
woAk/AI6ss0e3Ja3MxDnqVRb4ambRjY38njH6G1fqXcnX/eOnEzGeU5Z/WLS
KjefOrqq5B/hKrQT8d9s5W91iPMcDuU9m3Jjtp/e6qzqsM0IpSfSoqzkm64l
mdau7zyyneTXg8n6ZLXhGWCfN9tsgbIXHN0M2Nj351UDno1yHQK/WuRgIgG7
T/3prDX6VNSGMTU0Ixs3oCwmQ5UyER4OekoOivfU4e6m8ncQVA5mY/buKLe/
la7RfOUjx58pirrtuNHHx1fZk6Spz/koouDDDUOHvjAJi8rr3vcV9STFzV4V
Kc5DL7p6NYdhKVPRcR7p5X/ZnPY7Y4PGhvhA0jZ09Fmc3lBafHAnMveNfcgU
/79kbeulwT+4Zn6Rf75CL/qpD3pba9nf6L3hyl0NlV4JTn7lejCryMCWfiR3
vwtlDacmCmKfsvjWZT1KueM8ahgDscodBmIlS9nrLo5PvyhHVIAfV4Tot/8H
56qHyW580DtsFovlvaFek9FobG/QZovGMBtznjGjLvlCo6g4z/ZacMJpfedS
Sy37ddqGdvM7VueE/DOaxJGr4NQ+omdTTmyCcV3d6NRG6s9MrFvndDnnJY0H
huZG1eCleCsTZO2ZXssd/xIb1Uk9UWR+stqNsuPjbWODjmB75wPKL2bDPGbL
Zzke/87qK5MvxfWTgtf25K7xSu1umVditciBRAJm0/d+fdYYuPQ2jFVqM3Kj
9/PrfNyANFywUD+EIkqcsiXsqZhy196K7ylVn1Ai7k1lvyJBxeAq+MXHkqbD
+sNS+pnGbM7YO3XJBwZdh31GqboJiWksr+aM41/FJctFg443Om0/yR+KZeac
nVqCPGsPqiEan0uRcR7J23nTzzyj7YaOa7engsvRHTry5N7waZI4YbI/5J4N
dlanP+rqev9eYDHKMHTk/6bGL+rIltGpZRkvXkzkod10ymj9W3ymw2w+HGdr
2hjt/8w2c9wKOS9ykUX5g/aJIxn7Zi5CM9GAvUOb80hezthez5RZuucrldng
XtY4jwrGQKzCh4EYiXQRsvHq/XC5SgjuLLneTMYyajqcP+fpYnqO6j7ZZPlu
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
qMBSySWVKkNRQHonv7s6+bptJtO6/vy/LbzHZyd3mb5/ztnZIlMl4b0Sl+js
f3Xq2Lqc80L++2bAdlZUkUkZj0TyOuuXM7bXSdl2VOcpFucp4xiIVfYwyImZ
d/XUEuQZq1/JytJipd87GizT/+cdPaWK6yeT3FSLrWe+Er8JavdtJCS8emAD
QTvx29NxkdHyoxDnUfPlvVLPJmYlfu7o+++Jv/Sn7xeWeTC+nByqzjuiMhYO
pcPUG7/KlOPBhCkT30EiX9glxquUndEUvbYzTxxt1VmehBXBRB7aTfWNw7e/
fK+5wGlpAW0Yq4xm3F5jy8G0CTGE21NP1xS7uZStp9LJfu2tuJ5S7wlV2L2p
5FckqDhCZmYiyJJpLAk3ev4jMq4ZScM/UHHnQN3olMScnK3w1Iftx3/jWlA4
hZytLFFHyDzRVkpRcR5+eUVqXUMWzHrgiyvttdrajhuTacV8Uq/LM19kubyU
+qyVhJnI47tj75hNfaNO35LUe4HwjjLbNEfY/zF9rLN3z7MHFyQqeiSSH4ll
2/I+XdFxHhWOgVhFD4M8mOjMx60kQTbdmN4o+3OBsFUE+9R06lJXU5XZqYp8
SGHpFnls5PZfBloOjH9h6VbDiHfOO9IidhGruDhPaieyjHEe3ZuupQN9V/o4
jwpP7SN6Nu1E/Ddbq7ocT6WsSU+rgp55yVVqzph1RDEr7j7+I3sKh8afCVsy
7fUjvDcUv9In8XhZPTQp9pWSrNf2/RIlxfK8zYyPYZflP0wF355S38PPSf8W
phOP4uJ2rt9HehvGVNGMMkmPIZDalkG7Jyh7DKHUPaXMtTeDyuopNZ9QBd6b
StpBUJmSe4twMq3bSt3ouXNTuRxmZunvbxu4QyFbRqeWxf4IszHrutKoL2Bj
qQIkFs4UsaCpdIqL8yTrb+eqpLG7Mfnb5KqM9BTHzaD9bKIyQMYLGhvTa+lx
zWdpwV8mh04KI1Jczck0QunXzBdbdkNnfrynp0Gyd8+TaZvvlOJIhFYSuc5a
XORNsiLjPKocA7EKHgZibM46e3QEqTN9OqNgfqMYzMvJK8lVwYV2pTJSD8w1
Wm11hkTr5I2PPPYf7/6HyEVbMbFxntS7vwNvVph5Z0fGV3eljvOo8tQ+imcT
Q4f/NtxYLXnCkkrXydZcEb+1hfvfWXID6Hn3YEPiGzqcqR49sM5R+B/JRSXi
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
ZcR5ViaH6rivylWtSBFCpd+sxWReuHv5hUriCwfJGecha1vOGwtlfvdj7ws5
E1/EFOdhD/3nu+85ZzLuERZv8JOXpFUcSuXzVBlM1z/3+OeWIvKU5AYAAAAA
AIAjj4k8vjP8Ght+IZt6P/EE1/amSxyhOI+w7XvRcZ6dR7aT3DcVWdCmgF9O
bBmWfXlUIYWDZKrPwwVV1LRuS2Rxnhx2VjyXj0v6i1CfBwAAAAAAAJTC0OG/
DTdyWy/pLtn9v2SIbpQozsO8nLxSXeY4j3B4xe6Qlao11GwPlnTVllBtJuua
rIIKB8m03xafa3QsfQv48hJZnCe73X85zpyWst5qO+zq54I81U2W7zZU0gwA
AAAAAABQGbb/5eziK/LW9bsXMk86y1CHWcxaJ0XiPMlkGDGBphx2NzzvcIuB
yOOWaXEbtMtlwWXW51yTVVjhoGRrn7QFispO4msHtVj9xTSvfNKL8xSyLdrO
6uRVQ9N4YFv0P9wO2Nu4bCpND7UgZ50hAAAAAAAAOPLYJSd8UIBsswezzVUz
xHmic+7/dPh+2fOxouM8qcIyRE2H8+d8M2dF4jyxJZeZDYLoza6FIr5lw2dp
4o4tWyXk7bDrnZ5CVgnlI7Rv1uI8QuGgkyPeddHfmyjpQ5pdS0UdH/NqZryZ
JPWD91fUkMqSVpxH0+uWXEeJDdqc6HTOSVizFXJ28oWX1bW5PAAAAAAAAFQA
oR6v5qTtUbY0jVSaTSrOE/FZWvZHV4qP88QifmtLIrdiaPJlnoNXJs6TOD7x
G1FlsvvY3syHD8455jKl8zBzzs4WRTZXSsSpsq8XK6xwEPPE0VZNEOQJq7/Y
YkPMvKunliDPWP3idnRXUHpxngJ6fPOpo0tT9RtJBYtSO46VekEfAAAAAAAA
VLpUzCVHqIRedPVqShTniTELVBf/Y/lLuKx7R07KH+dJxr5EBJrYgrqBL660
12prO25MLqX+5FTORuaVbsx20N5W/74vyx/IRB7fHXvHbOobdfqWpBbpFZKv
MjUv++VhysQfW5tDQhpKonTz8V73C2nHk+kQojMft5IE2XRjeqOkFaoPSC/O
I7Ui087G9I0mkjw2MiXpnxUU52HosNcx0mcyvzs++RzbcgEAAAAAAEBmO37r
CX7On326Sj91vnG2/VTN3qjFunekbf+UX444TywWmbF1cMdUP+jJtYURs3J/
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
sItMTwVBdtA+mf2cI25Kkz1s5Dsd1Q9N8cURuxvTVNd4lhl30XMexS5ke23+
kWd+VWLUfLvgLD3AIU9KvHc7PvpUts7pctbZsds+uoMkKnqYRWXyXHZrdryV
zHcpZUGhOQ8AAAAAwIHENh7iif7dPz3nybtRcMGpNudJbWEjvXyD285YOmQ7
mMjS5EgzSWp7Gb8qt0hL4HZXJ89aZuUtyFiyG7nZcSvtE51hp7p59NgW+JsZ
8lrOZV0QV/Scp1AXko5vF9ww5tlS8WNwtCjy3rHhteeBOL/b0hU7tmrQ/kMg
4flaOPfb9WrWcpZUtmEau2DvqyXIM6OefNtBFwaa8wAAAAAAHAw/bYkRK9pn
f7B1VScPIHVDk+qYA6SoNeeJBJhe7tZK5wchH30ufoxWYnfsg2IXHZfr1dk3
W4BbeSS7kInPJPVMQPSAFUc/F5oJG9bEZovnaF+W0qaD5Dxs8PFnY+8YDQMj
NvdSvmFaoS5EiN9XPcczcJgLYYNP/mF5t/g/e+iXVs97lyjny7s5DxfiKdxO
hw3PftROEmTLjZmN0qcqBWjOw0YCLqt5wGB8d3zqR3WVpQIAAAAAKIj1Mz3x
dhOajsFPHgUzJw1sZO5WFx8EVfRYn6puAYhacx5+QZbkLjbsy7uXdWRsR3vl
C28SyzryWBVVEtze37orTsl1bQL8OjjxKTafbKTtbsb6bd2N2QtaDpDz/DQ1
1Jj8VOSf0RXqQnjJtXtEVQt1X7TrlhIXsuIy88tqtOdsc/n07TrMzx7yx9X0
3u08sjRW5N+cJ8+ANA+hOVufNvqNZPjjrOj2i8VTgOY8u3O2c9rknyzO0T7V
/X8ZAAAAAIBC2O05W09sk6ZTg7aZQFg4YdoNL3wzpj+Z/MVYpbs4qTTn4fdW
JiQaLEf89oF6onBTKjbgGKjLY1VUaXDLT+oGHIHc81z2R3vvidj9FFnEwScb
GYHNlt92sXH0QdZOtfnnPHyTFk6+C6MKdSHJUwTdY+3VBKFrH5kIZM8PD3Mh
GT8rVd+i+M8q+9Ilfe+SO3Pl2UAp8dEuTFLBrs/SF2NRT9evnf48N3pXchhc
RSJHTsMiGdKKV7PtgQgAAAAAcPTtBH13htu5qp6mrv6h61TUVZO+OTkfqqwz
UJ/O/qTCkGdPrTlPqjlP4/u//6CrNaOsIvJsYvg0Wdi/myf+6N8gLxwokbza
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
Px0Wb0n7GR9QopNYpcm5UZoBIOcBAAAAAFAWN5mqqDX8ynqbSbjjmJpxS/lu
fk0908MyzHnYUODh1wx9Y6i/p7NJm5jm1radN5pGLH+663q6VtymzWx4yef6
+62b7/cbzjZpuLYmlbVtrxtNFM1MeZfDOUfDhgMPv2Lo3wz3G8611VYm74i2
qVNvNF2z3Pq7y7eU+yz7Trrsu3/31m+H+y+cb6sl959zblXifqsg52HXfZ/9
1tRZRxLa5t5ffzr7k+gQ2NXv/jBwSlt7nnI+U2KMm4GJq83RO6V9Y3zmherC
LXbB3ldfPzK9kXoShJ+gHttCXkvH2Miab9I2OnixPfpwkLVn+qk7nqVYqrPr
o1u5UzZavCLR0W444L4z9rY++tEja9v7f814Xua6V+ymm6qJnrDqvalXsp/j
yEsP8+v+6Ohir3LD7lvP9pORFd/U5/Z7c8GCfPSTu8yfuOYqTfJ3oJxHZd+T
AAAAAAAqsuMZPUkS+VBVBYTqch5hU5Gsd1HPLGT+LLsx/xVtatOlkhD9W2Yq
6pdDl87wWQZZd4FiHixJzGJ25h03uB/hO+t2NmlSU6fd8MK9W5QpNo2Nnr+r
30z/w7sqMYOO/DT7KWWoSyUzzcYr16PnNr+lT06sCLLRaJlckFz1s73q+bg3
cQYuHboaGx113RwdgoZ/8CrrDJSMCTV3l0KB+38aioUkPG1T5/n4pQpzJF37
8B2fyF7YkjkPG37pnfzLzeFLXYmriw5Y3z/8oW3Sp+ScMfJsYvhcN/V5LCKL
+KxdGoIUFrHwfpoaakwMUoEJ+E7Q82E7SZDNVycCKmwUHN/gWzfoSHsEXnlG
TyXfp3xqPNh135332zUk2fTzj6di8/3YO/vpey0t0WsPBphe7skR28NrMzB5
o7v9P3/vjL45u2zQM96lJcjT700+z3r3kzvrddkW5L1LbPAhbTilH/3Ct7bN
hh6Od1QTFXr631IXuOm3vRGvQCpUvRC7YOsq3PljkazLHgtk+EiW1DR1xoJi
+/25te28cx4lvicBAAAAAMqZcFMbObRGq09FRfXcoEo9CoGD5jxs8Hv70Onk
HEXXPvxJ+rKaWH3CxM2+ZLpBag2/m1kSmbBLvD43dUpWdJC17ZfefquzJst7
ygYf2QZakuOprDOOTy0IihUiK767VJeWTA7mj7MiicoeG/i0T8vnMfWJ/rr8
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
53Csxa5qN+hJ4n6DL/UoRMnKefb1wZax+iMzwBEtgNl3WLYw4TDjEc7R5LUo
ySQj5xFWDUkdI1fGpDLbmBXNeTLJixFWpoaaOqxPDvwZ5NofZV18VyqxhkuV
2bsGCVPELNEe3+KGIGuoGcnJPN/QOGt9TlIkuQN79gbL/FowOTlPBjbkunYi
6zPAfx5l1ZKxz6eundXWvX1Xqj5K0mGuIt3mDFUj/KzKaKwkI+cp4PckAAAA
AMCxwEb8TG9sO+yKeurbwi0VUAT3G3ypRyFKTs6zvw/2AeYvEkurMg5rpX0y
Yp4Vx88r0k5+Qk/9icnmd6Ym/gqyxy+74dX/7XVPORirhfrlUP8Fvf5sk2bf
ZjtiJ9k3y1Mw58l2wwuZ8/Ar0bKGY7E9tTsPs2AnsxHTAWhOXWaeKN7bhw18
2qfd/+5LkwwqUy1usm6/nuq2JK8+KtmaOMeCqcMkJHzpi9QzwPVPI3Ivn4xL
fkyy7g4mTrGcJ739OyHvo5rzI1nI70kAAAAAgOOAXbD3xSc4FX3Mohpbtwpx
v8GXehSi5OQ8qcawh5i/SFQ6ZBwmK6PYP558aM5ZPPsn0Lvh5ceTtlFTZ51g
Vq9t6ro09BvaxnzmdE1a+2uFZ9k/MczMW8og54kFOPHUoSKtM3OmFUe/5lAL
drich6xtO68/KOO7H7leKFwNxC5NDbfWmf6/aXd2U4JnQyqCCHktyQU62ZYd
8YfJa2jMlxLlWDB1iISEX7QlOWw+a9q36FJEMhSSVa2UQbGc50Af1ZwfyUJ+
TwIAAAAAlL+dFecVbj9aVa71yMT9Al/qUYgqj5xH1i5CUtjgU+fNPkG+Q2ra
TON2l29ZuLlb7nVb+3aBP/I5D7/TFtltkw4dYmUMmkPuph1vuKSyzzIb8oy1
nBh0ZAm4EoTPxqlRj1ijF+FuTR3WeanLTB0mq9yF7+6Sa8EUXwKXb0KSKkOS
fHf4NVCyFl0mdgeT0Q9nP8X68yDnAQAAAABQHb43LFF1mK4gRcP9Al/qUYiS
1Z9n37ToAPMXiZnUQXKeA41HHBsJfE111QhOdVI/di8g0h5ZRn8eJZdgqCHn
4cOB7Bey5jJ3HqjlkQDXu+aEcC/vUtv20h213VafjGJB4e7YEu+U4E3Kttc2
32BcVrmLzDdI+Pr57ofFL9yT/KZNdRLOkl/xEp2KD9aFRrH9tvZ1P1Yk5ynk
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
g1hPI5dXYepZ4MnYC+rQx14L+9DUzC5E/cezrWwTwJPRB5P9zLyIs8Yr8x7M
odFg/WJhJcpfUEMUEoxQdhchpJlUPVxU2/uBL/ISpyKyyuJS8klszt8eI3U5
9bBXlPSJr3qGGDWRO2ofT4SxbuIny5VoiAqKOHvujDpnEru/4X2rkTMBNRMg
JDSDerW80P6aZzjzT3qfvsiNogIdSM5iQA6zSV+SLaYR+xfaB9yFv2QLJcfg
5bikNMSvjvei01f02dp0QbgCz0ocspzTRa3+qnVu/unCe80s/HPumIx4hl8r
FlxRA2RiGpHjw95n0rpTss4jbbpSjglwctU7lpm+IA368fsRcoGDx8J3RjtS
k4RubCHrFVze+Qx5Wuzne9YzGfvVdI85Z8LrrAPx+Hp49jb9QTY153mYVSaj
/C0EKstedPYjU0t6AqTp6DVb3reRWN/q76Cm6k1d43fC1f6WwQnV6mq3Qk4U
2aMcUTcfJsC76JGI/LE9dFha8YImJZ+1v+G71IS0jfnYk3o8ufYdNmjonpjm
KhtdUiOJD0DELD3vcxIx83yzm9isJMqBUt+XZd9hQSo8o93kwKtbjDb3XCRW
YYWHpsIDtL/pv9JC9Po1xwJ7pwUZctDZY/t29uZp4tWXKdO8+72t7ZyAZCn7
sflPjVoU7XjLtSChAK6EgZbbNvCXK/6PzXqW2KPpGrb/4b7/uzn//c8+sZpS
/6U5Y733cwxnSqzm0G7xvyAulVcuNA8mCoiVdI73WK7Ql+RqyG0z0u9BVGMY
sTvdXv93wTm/97NPbOYu4v6a18bdf76RNe3Jb0BpiDdCuV2EwLtuzzsvElNE
Tfc/WwaPCygaXtLd4tGFoN/rvmkf7mIZQnOP5WO377vwOm/KESK9ZDBI2ttv
+1vYG+6ae603U6YYTBFeZ39/nbMRSo96KFu3IapRUDtfVumv/MwiLhF29p2i
DTUHZsOU8LVMlbwQHt/Zpj++MAnBcq5WFGEOhFGlaHhCp0RBF9vKzCvwnW9t
J8455uWbZrAMXv5KkYIRuTqmN52JgWs/S4lDhke9wy3pc0VWCqvWuYel9JrK
dpKt8ySfzEz0dk48UNqGCAEkt5ZDhJ8MzgV89247rw0bWKqGttfyyR/veP1z
5BHBH5a3hHWwZJ1H2nSlPBNgfDvsfidLTdV09PSf6SDyUjbo81/BFZjPEK3a
JSLrs+plo5qOM/0pzhl0aPovhjHsQSRXh6lMC4HKgsfXwgEP9uG42XjWoEvP
dTvOGM3v3rjlDUZ2FDtKlB1VuxVyosgeUeqNWmc4259DTwfpD3J0nrQ/yYc4
XvY9XFT9U7HfHyWdRRetuHw3vJE8PCA18au9reds3l94ykaX2Mjk2qy9N7WO
Q09Z7j5aT03FCR1+5ubwa0VUC07oL00d1sCWuBP5SL1KHn6ZpfAEn1RZuq/w
ANGfehFV19W/EHfEk7GVkNfen7rjzJNkWq5BWt71re0lY7/cHz99wvYt386g
NNRZDS2DWG4MjEAkDLTstkGR3FkJfePGrlnM5zOTC0Tb0Wu2Yl8Eo+ltIfjO
sv8z+9gb6bcPNT0466DSn9KzDi7/Q8+m8mYdxEQrF7oB/LMOQk94cJd8D1KX
pd6EOsOF39hdM+Tijk/HlqsSpQQjlNVFiCCxGXKNGUh97r/7X/+vtxxuXzC8
8lzWWE2a/XnHr1DSbHrOpQczPVFB9ZYZ3sIp6RNzziVsoYf+hqVuGfsqq2QX
6UBQ5LhxapYIbyYM+P4NU2fnmJv81EXvGkNUF24tvsTjTwJTF9q400HjL/2X
yY1iQouekFTbC6Urtoiu6CTUgaQe4N8mB09o0JYeyw37xR45JgOxv2P9KkTT
iy3E8cRW+Cu78fXxabExkEWhDJ5c5GpOmKz/Wj6D50Pk6jhn77wQOFIHlzxk
qdP/Y8p8MnV6r/XPIr8XV+vcw1J6ja99cznlItT/9bP/fImnvPHC9Cfmnj7b
N+X0xuUjFrT3579MuTjXY5gUuKIvVeeRNl0p0ySHgKg54nNdHzcP0G8WImTi
6k3OmPZKzWcIUub3c3Da5ZgYHUwv1sirGc3jN/5wP7DIHXJfyRYCQDEos612
K+Sk/npUftKfIMW9MqSdRX36/8DclfJg5HJVaJVwqbcjwlFC97AJcz/pNDX6
/rHJO5LkFPrdWiTpumASi3dHOslVVJNh9JMvH0aVEpxZ6QHaWwt9gVnNvcT7
Xa3renPc8e+sksT7seVvMIsx9XJEdX2XsNlikz1qUabrTycdkoCEgZbZNuqW
3Wj4l5UoC5ljkiW6MrlchGg23Of/F+S//980/6OQRaTm5Ij7l+pEQogC31n+
+qbV3EdMaDkeZupp/+i2pRyMGtWdNtu/XOJeQu4uOKgMnaLKzVfZC6Uzax0b
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
ABwZ9mMLn4+9/vvgHl7tlnCCvwp9fH7s84XYfrVbAgAAAAAAAADAUaH+NATo
EQAIBd+ev3XJ+OathVfK1EkKsxedvqJvMrsj8Wq3hB/8ZeTeO636K9PRvWo3
BQAAAAAAAACAI0H9aQjQo0qCxyMPsEs9OjWiOTFouzu/mRBxcnInEvTeclwd
NfX3dGhTfUR1hn7z1Ztfzq8na1F2qDnw3dBkJ5p68CZ3NCnbRWPhr91Oh832
vsVs7O8/Z9ChiKbPtSz3iJIij/rc1KNtpdsKvj2PXWhSptSzv+y9ZiOwpn6F
FOeIH6PGFpTNIgAAAAAAAAAAqChK1hCkAT2qHPhT70grwgLt+mg+LmDZje8s
+6bMem36PK3edOl922VTRwP5T3XL4K152OpSbhILWHcj+cB7sLBsITH7C5+c
0qBIFq0W/4Zc16duEgtd70Jbhz2R2lAjyF8K2nU9pDSrTgZtGoQD0HkAAAAA
AAAAoGZRroYgFehRxdhfcLTnrg+bzd7nRU5LPvZNnEkvLlGt8aNAdBc/xBOL
t/pUzHUau7EFMbFBgFgSUc9IWmjrsAVjcl8fT774cpTS7dCLnjU+fQNPRv82
OXhCo+kec/9doNiEr/317RZ108j9VaWH8mTAN/823tLQ8vZf1xTV5oNo8M9u
t/uPn1h6tezfMeg8AAAAAAAAAFCzKFZDkAz0qFIko26T+ECA3SXXELOiRDuv
ze1QCkA8jPVkXegEFj6oSD+OJPjG9FgTE3UjQJ2TcIuo24gWG0o84h5ooltx
3B4SEu1CRZFpRzzR2hIC9zd8l5qQ1hHv07IqPXSETr87Kuo0/BdndwPoPAAA
AAAAAABQByhVQ5AO9KhS4HtBW3OuzKM1uiMFlrHZ8sKxQc+T9MG7C47urCu1
OxYUtselfsA3AhMnGzWN6ZHQ9LtX5L7HwY7vN2pSzGu2zfEmptkLWBtpza9p
bHqjuAJCqSW1Ge5FbZRruuTbKJ9l4y/9lxsk6DyHK+5+1g4u0HkAAAAAAAAA
oGZRqoYgHehR5Uj87Bo4ztZmUP37s5sF1rD7G95fZ/ZmIa87lxkBAE+Ese5M
WpfaXMjXBuSjVp2duvkuM3hlWNbvBG2d5LV1o751/rZszzsvtqhaeix/ElR8
fPd7W6uqzFJJ+aBEKlWr7fvdct1ib9n5OgI6DwAAAAAAAAAcYZSrIUgFelRB
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
Q+r0gPDuI8ITYaybcGY6jtpkRMdNrWfPnVHnLKv3N7xvNeYXNGeig9CLnjWB
mlg6ybOoQuT4E88gGW7Jke4YT0bcg1papGdpga8irgvt9h9fFbhsqTpPOpxJ
0FYm4SRXvWPp4NEUDfrx+xHyN4XHwndGOxCksRtbyDV4PL5F/TSjQaynkeu3
yZTowpOxF9Shj70W9qFIDxai/uPZVk7ybzz28z3rmYzqoukec86E11lH4fH1
8Oxt23myYOVxI/YwhleueQAAAAAAAADAQyzsNGmJGWyX2fq+jcL6Vn+Hlpxi
qluMH3qXdhQ7u1SkhlAS0KOKkPN5PR/2Bp+iByPliO3Bo3eHiIW8NrfCOKFL
vNk9/lWUI91ribfcnndeJFasmu5RzBfeklNG4rhbPLoQ9HvdN+3DXazn29xj
+djt+y68zpv4lsh2GwzO+e9/9slv+1vUrFFo7rXevO//LpgivJ4lTRPKGKH0
qIeydZvkixBmaiWimFb9FjKnMaPzJMLOvlMW/4vc2zO7pUTlpd+dtR5DBdbn
SrO/6b/SQtzpNccCe78XGfvU2WP7dvbmaUISyBSL3/3e1nauSMqmUnUeKpwJ
PVZqAvA88O2w+x09a68Uouno6T9DloBs0HMafF4F9DyYlD7JqNtU5EfMGTuH
70aDbpuxjdUuVNNxpj/FOYMOTf/FMIY9iOTqMBVoHgAAAAAAAABwk9gKf+20
jRE11ak5q85wzjRmw+74F1YV/gGRmv9WuxVyAj2qCJR0o9YZzvbnQP8K8nWe
9OIuH+KUcuzhSq7N2nu1KIKestx9tB4/IIMHZm4Ov9Y9MS2/yEOT2Ay5xgxk
YIXmhMn6r25fMLzyXO5oJYL9eceviGWytqPnXPpRnjXoqFAZvWWGt5RT+sSc
c4mFdw8jUI99lVuyK/l4evwUihw3Ts1GU91J7qyE7t8wdXaOucPEVjV64xii
unBr8SUefxKYutDGkRGaKUEotAZTGqp+vaqtcLBN7t2oICtE1XX1L+GNJBH1
sRLy2vtbz9lmniQP92PznxJRly3v+tb2krFf7o+fPmH7toguX6LOQ2+w6rAG
tqScXoSDePShz3V93DxAD6Wmo9d89aYvzFXEihFSuH7ItECUJ6QQ2lEutGBT
QEhJ/fR+Dk67HBOjg2kXQV7KaB6/8Yf7gcUqNw8AAAAAAAAA6ghFagglAT0C
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
ABy4QuQ84UOQQ/SvmF0/JT3nVglUNd2WhYpUQU1FFac5z6bfO/pV98vB/4v0
v7w++rP6JqoHN27F3rcVIQXmv7+eT3+e4D5fsaJzcDGbZ0Y3ZImtjvlUD4r7
XpS0Oxezu7EMoidtpT0JPbi4SyezOU/wcK7BzgpRqP7QTX8eAAAAFEK+OY/0
zGMPtU4VRL3hk2FlN9ZQ03RbHipSBRUVVYTmPDFr3uFPDHpREE92Dz5SV9Rz
gOOmkJwnSFq601sXWtxS0elMs7glqfUJS1O5oDc55+U/cW3K+kpojEsbLD+m
uvG470W6Hj45CR7+VZLpBkLrc5plf4MC806TPpeD6de9jsuhkKes3vz9ChkP
AAAAduSV80T/mCgeb7P8z3z0j4nS4sTfvrbb/+nx5TGF2Acqmm7LREWqoJ6i
Drg5T5Ib8E/f6q4rE8Qm82hWCz2K6yDHLTDnaC8RjrQ5HuczPuF1KXmfihg9
YbysYeBelseCh5+rO2Obkn0L0eY89WZ3qsUy0Sgm09aqXER3hFV3DaVeKLRy
u+vY26mP4koUPr1LvGCbznL8wkFZsMxL9tksIyIAAABoWu45T2B2uP+8XhDE
qv9j2bXPYm2kpzz/Y9oLTz3TbbmoSBXUU9QBN+dJSgpM29v0oqBvt0/n2OX3
wB3kuEkvxvpr8unZG7Sx6LpSIZTU9N3NMlzYLXr4VNp9TMlJs/bzJYLYZPHI
bIgd/mQJJhuvOxdTbY1bcJkqww+qNv87jyFKasZuCH9gnrfNpIpWNhadpkq5
3x1p3WNpEoWS8/bZbEdvZweZUNM/9kI9mSgAAAD2X445T+DRYPdJURD1xt+N
zu+e1ER+8zfYvYW+2zypZ7otFxWpgmqKKk5znr0C87d760RR32afVkXLkQMe
t8iOp8sOb66rOMJXEM9aPPkGIdGcJ5ctYOHT1cXTA+OyNrrFXqvJmmoNkDTn
aAuv5slnfFKJfl6mae+8PbYvnZc9sM/HB06LOZ2ontfIAwAAQNNyyHkk34/2
zhOiIIh13TeGR92JRoduXm//RfAX4Z4RpTXrUc10WzYqUgW1FFXU5jy7bmXW
eblayGn+e/AOfNwCc87OCiHnHCzcOV+suHwr/8HNL22ILCuSt/Am4LW3iRk+
qlY9lrOhx+jPWD1JU57tz6+b/W+1Gjt6be75bEcv+nmZ8g62K+o6Lr+5dO7n
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
V2Iz/tK3XCv5dVVJw2s3xF6p8petzSVx525veiwN8UlG2dWh2JYsad1jaYpb
rJJ2uYj0fOhqWbQgk2tlzyPyynm2ZuyG+GenS8ayeKHcByfFjZ0431p/LEXD
pYQhEgTxWN9Ynrv1pClrU+yCzRZPwfs8AQAAAACgWdnlPFsbPs9Nc8cFQ+tV
y8hswoPXJyxN5dH4pNr8731se5sQZQRfrqbv7ovoVxNW7Bw7b3sQl0Y9HeqK
23kmlDZYfkyXRs07WqOhULLkSvE5T1aDk+rG0p14tevGxFbHfBYjsFdil6fy
3pE1lvMAAAAAACBXljlPCtLzya9eix5StbtxccHtjjLqze7EtTbSqtf97ddf
/21kcimhohWXqTT+ibu3nu0W3OYUDXqaBiZ2Z1dqyHlkD07KGys5PnA/1bcz
vxHYK2FVWN6pEQAAAAAAh0seOU/At/DE6308NT50o/fsTshT0dj5x4l9DXm2
9kQZsveIJfaRzhCthMQnHrv7Tm+pIufJZQPdrhtLUnguNyZLwnlwuQePAAAA
AAAcSjnnPHs6+m6rNvb/Y9q/b215onZFGQ0Wj7yYZ9H5eknCDR8xmP9gT+d3
ptpYT2CDfWbXFVWQ88gdnP2/MVnic54kA54lKbAw+WChMKe9AwAAAACgfLmv
5wkseNxh/zPk/GrA1BS5jq7JZLkzs69pz64oQ262EPDaW3dHU/Lpzg6M7e7E
rIKcJ5fgRTM5z/JIz8vtzp/zuwgAAAAAAKpRmP4826Rn45aLsRY9hv9vbHnf
dm8VLOfJ9/B3cp797M+Td86z4jKV7zoVDgAAAAAALStYzrOVeOq6IOovfePd
p7OSco0ydocS+57zbPqX57zeJwu+pONKzrNX/HlbeeY867P2V492Di5yYBcA
AAAA4NDIJueRAsueIcfX9q//9v20L9nseXGoqzpuzt9s8fj35aZzjjIWne0J
DXryXTGSKeUI70JK9SrkPElIc462ne9RPsGjtPRdd/U5i2f3EWkAAAAAAGiY
/JxHWrrTW1cWeai+1erZO/dPOCwp86nlOcs5ypCeODviu0eLR82jcrr0Sr6Z
e2M/LQd2h1sHlfNIz4eulqV7oTgqz3m2pMeOtiORqzVZp3JbjSMtjpqbG8zf
r7CYBwAAAABwmMjOeeI31AQTkmN9Y3v67+zKeY7uVwvc3KMMadX9YfySI6Gm
f+xFxizgmdt8Imk5B5Xz+D2WZiHdC8VRe86z/T0aeS8S9IgXbNMvsr/Cmtd5
pfrUJ2O+fesQBQAAAACAIsnOeXYdSp405/nZ2X407iG5TdJlyCfKkBaGexvF
2JOrLztn0wY9G76xT05tP6EkSUdfacraFH8nu9efhAfkeM/Is2RX3rXNLXWc
ktD4SPM5z/awzjguVYYuV1LdO5zlmpw17/DHzUffcMxmdZz6hs/zl/7ONmP7
+1+NPWUREAAAAABApbLYtzVrPx8NG5Lt25IWnR2xFT9ixf61wM0zyvBPWI1x
u7f0Fy3jz1Lc6frS2BdtVdtVHTtve5Dk3KaN+wPH4xKYknbHXGwIIwNS8c7Q
StJT5gNzjvh2QZUm10KyR3lv9zSWNDSejFtNJbTYZlKNrQZynu2hm//7m1Wh
sREbe4cX5P4cSSuTjqt1FWm+ocmf5v/fz1qi34kj742skvQAAAAAAFQpmz7M
Po+1NXRyuq7J/I/phDOkpMDyhN1UGw159MbPxwu9a0byLz/xhowl7mJqtox5
d6Q42mr3pXwPbvacjgUUuqZO623Pgj82vZf8C57hG+YLVcGlP8eMlntJG08H
sxpnZ0XsVsrqum9N+zdDL+H5Ojgg5U2WiZQHe6/+0Fcf7bsj6lv/4EkYtE2/
d9TWeWL7C9ZxV0KeIta3X/u/9m1/dns3CzQ4sUu4Lc3lcZeo6XI+DP179OAw
KeB7Gn7oI2dXedKXe7Lszyss2fCNf27UhxZe6X95ffTnTN9WKTD//77qPl15
6n2XN6uVPNsWXKbKWAklrzsX2fAFAAAAAFCHjQnrRUPMucbK6CYmsbLxXOwr
F3tcT3Y/WXrmcfy6JTz7FvS1La91fWDe9kHXxTrdzmXEGuPHf5vch9Yoe05F
TyaLnsyrXrfdbKyJ28Ml6mpPJw6KqGvstNyZThdZbI+J/e26uKsIutpmw+na
4ICU1XV/693TvTn+yQHvP80tsc1uYuVLr3X9Ojim5ndNhrrtesXaN2wTz6RU
xe9kcwUYnMyXiDYaCnjtrRleK5+zsvYOTvCH6q8TC0m/D5t+772/WTob9b9o
Hbg940+6dCq9+JynrK73zhLLeQAAAAAAKhGezSdGOruEM4qUZ45L2/Pqf9gt
5s7WWB6ir202tJrMFvs/73n3a9NLJIdIeetnGytLs943JPkXHrgHbQO9pjZD
c20k59DVNhvbu6/94dbIw71nbCUTjBpctk+6288314ZXPNW2tL/3hcsj6+mB
lWm388tr77Qbz0WeHrnCOwNfu73h4CIawgRDpBjj6/bJjQINTuQSpZWNZzP9
SOzkPIk3k5AcFiDnCb/U0/FvftNWFxoWsfLUa+9cs9qdQ//jdo+OuBw2y0dd
rQ06scZotrtz/8GT/J6vu5qrRN2J9uv/SpvLAQAAAAAAID+BlZmxf9otH3W1
XwgFSaEwqtXU02ex/2NsRtZePQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACK9v8DYC4Htg==
        "], {{0, 612.5}, {764., 0}}, {0, 255},
        ColorFunction->RGBColor,
        ImageResolution->{144., 144.},
        SmoothingQuality->"High"],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->Automatic,
      ImageSizeRaw->{764., 612.5},
      PlotRange->{{0, 764.}, {0, 612.5}}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"link", " ", "=", 
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"www", ".", "researchgate", ".", "net"}], "/", 
        "publication"}], "/", "256423221"}], "_Efficient", "_Enumeration", 
      "_of", "_All", "_Chordless", "_Cycles", "_in", "_Graphs"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "For", " ", "matching", " ", "number", " ", "we", " ", "use", " ", "the",
       " ", "IGraph", " ", "built"}], "-", "in"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"matchingNumber", "=", 
     RowBox[{"IGMatchingNumber", "[", "g", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "For", " ", "the", " ", "following", " ", "invariants", " ", "we", " ", 
      "use", " ", "Mathematica", " ", "built"}], "-", "ins"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"maximumDegree", " ", "=", " ", 
     RowBox[{"Max", "[", 
      RowBox[{"VertexDegree", "[", "g", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"minimumDegree", "=", 
     RowBox[{"Min", "[", 
      RowBox[{"VertexDegree", "[", "g", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfComponents", " ", "=", " ", 
     RowBox[{"ConnectedComponents", "[", "g", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfEdges", " ", "=", " ", 
     RowBox[{"EdgeCount", "[", "g", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "For", " ", "the", " ", "triangle", " ", "count", " ", "we", " ", "use", 
      " ", "the", " ", "IGraph", " ", "built"}], "-", "in"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"numberOfTriangels", " ", "=", " ", 
    RowBox[{"Length", "[", 
     RowBox[{"IGTriangles", "[", "g", "]"}], "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "For", " ", "the", " ", "following", " ", "invariants", " ", "we", " ", 
      "use", " ", "Mathematica", " ", "built"}], "-", "ins"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"numberOfVertices", " ", "=", " ", 
     RowBox[{"VertexCount", "[", "g", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"planar", " ", "=", " ", 
    RowBox[{"PlanarGraphQ", "[", "g", "]"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8561807502689323`*^9, 3.8561811320232153`*^9}, {
   3.8561811698807764`*^9, 3.856181351344073*^9}, {3.8561813887130013`*^9, 
   3.8561815993003445`*^9}, {3.8561816456339407`*^9, 
   3.8561816552229805`*^9}, {3.856181697188391*^9, 3.856181879920906*^9}, {
   3.8561819900368176`*^9, 3.856182079764497*^9}, {3.8562482329673862`*^9, 
   3.8562483496348515`*^9}, {3.8562483870935764`*^9, 3.856248444333432*^9}, {
   3.856258168787259*^9, 3.856258195148507*^9}, {3.856258320111644*^9, 
   3.8562583499231157`*^9}, {3.8562584136086845`*^9, 3.856258482489478*^9}, {
   3.856260170263424*^9, 3.8562602989235363`*^9}, {3.8562603338813825`*^9, 
   3.8562603996431985`*^9}, {3.8562608154325676`*^9, 3.856260838124175*^9}, {
   3.8562608725721407`*^9, 3.856260893562584*^9}, {3.8562609662826576`*^9, 
   3.856260973060658*^9}, 3.856261009844618*^9, {3.8562610471945686`*^9, 
   3.856261076257266*^9}, {3.8562611197084503`*^9, 3.856261183763423*^9}, 
   3.856261278779187*^9, {3.8562613638006077`*^9, 3.856261443913782*^9}, {
   3.856261540536578*^9, 3.8562615901604443`*^9}, {3.8562627023728733`*^9, 
   3.8562627033658733`*^9}, {3.8562627396443367`*^9, 3.856262756440817*^9}, {
   3.856262795041726*^9, 3.8562628815261664`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"6c7027af-b1d0-4477-bd26-7f86ee57ae0a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"There is at least \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", 
   Graphics3DBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 1, 2, 3, 6}, {{4}, {4}, {4}, {1}, {2}, {3}}}, Pattern}]}, {
        GraphLayout -> {"Dimension" -> 3}, PlotLabel -> "Claw Graph", 
         VertexCoordinates -> {{1, -1}, {1, 0}, {1, 1}, {2, 0}}}]]}, 
      TagBox[
       GraphicsGroup3DBox[
        GraphicsComplex3DBox[{{1., -1., 0.}, {1., 0., 0.}, {1., 1., 0.}, {2., 
         0., 0.}}, {
          {Hue[0.6, 0.2, 0.8], Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{1, 4}, {2, 4}, {3, 4}}], 
            0.04522292993630572]}, 
          {Hue[0.6, 0.6, 1], SphereBox[1, 0.04522292993630572], 
           SphereBox[2, 0.04522292993630572], 
           SphereBox[3, 0.04522292993630572], 
           SphereBox[4, 0.04522292993630572]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    BaseStyle->{Graphics3DBoxOptions -> {Method -> {"ShrinkWrap" -> True}}},
    Boxed->False,
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    Lighting->{{"Directional", 
       GrayLevel[0.7], 
       ImageScaled[{1, 1, 0}]}, {"Point", 
       GrayLevel[0.9], 
       ImageScaled[{0, 0, 0}], {0, 0, 0.07}}},
    PlotLabel->FormBox["\"Claw Graph\"", TraditionalForm]], 
   "\[InvisibleSpace]", "\<\"   in   \"\>", "\[InvisibleSpace]", 
   Graphics3DBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 
         9}, {9, 10}, {10, 1}, {8, 3}, {2, 4}, {3, 5}, {4, 6}, {5, 7}, {6, 
         8}, {7, 9}, {8, 10}, {9, 1}, {10, 2}}}, {
        GraphLayout -> {"Dimension" -> 3}, PlotLabel -> "G", PlotTheme -> 
         "Minimal"}]]}, 
      TagBox[
       GraphicsGroup3DBox[
        GraphicsComplex3DBox[{{0., 0.5976089801541532, 0.5382792430322076}, {
         0.9698841409614115, 0., 0.31869020099781603`}, {1.852587609887209, 
         0.19548462650267562`, 0.6845331640972174}, {2.2418088196691057`, 
         0.0685992608983429, 0.1371849780227448}, {2.6603605231261405`, 
         0.7534475515451683, 0.6393354732148102}, {2.47730632200889, 
         1.086201713782346, 0.}, {1.9558471196920113`, 1.6290748905126473`, 
         0.5109698812989135}, {1.4484553502237192`, 1.1223959115054276`, 
         0.2072863670544965}, {0.7018067356351285, 1.4833053266183196`, 
         0.4769538283112046}, {0.4464571271246023, 0.8068903801617295, 
         0.035378569427116036`}}, {
          {Hue[0.6225, 0.6175, 0.9], Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{1, 2}, {1, 9}, {1, 10}, {2, 3}, {2, 4}, {2, 
            10}, {3, 4}, {3, 5}, {3, 8}, {4, 5}, {4, 6}, {5, 6}, {5, 7}, {6, 
            7}, {6, 8}, {7, 8}, {7, 9}, {8, 9}, {8, 10}, {9, 10}}], 
            0.05550661036192864]}, 
          {RGBColor[0.2754, 0.393219, 0.72], 
           SphereBox[1, 0.05550661036192864], 
           SphereBox[2, 0.05550661036192864], 
           SphereBox[3, 0.05550661036192864], 
           SphereBox[4, 0.05550661036192864], 
           SphereBox[5, 0.05550661036192864], 
           SphereBox[6, 0.05550661036192864], 
           SphereBox[7, 0.05550661036192864], 
           SphereBox[8, 0.05550661036192864], 
           SphereBox[9, 0.05550661036192864], 
           SphereBox[10, 0.05550661036192864]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    BaseStyle->{Graphics3DBoxOptions -> {Method -> {"ShrinkWrap" -> True}}},
    Boxed->False,
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    FormatType->TraditionalForm,
    Lighting->{{"Directional", 
       GrayLevel[0.7], 
       ImageScaled[{1, 1, 0}]}, {"Point", 
       GrayLevel[0.9], 
       ImageScaled[{0, 0, 0}], {0, 0, 0.07}}},
    PlotLabel->FormBox["\"G\"", TraditionalForm]]}],
  SequenceForm["There is at least ", 1, 
   Graph[{1, 2, 3, 4}, {Null, 
     SparseArray[
     Automatic, {4, 4}, 0, {
      1, {{0, 1, 2, 3, 6}, {{4}, {4}, {4}, {1}, {2}, {3}}}, Pattern}]}, {
    GraphLayout -> {"Dimension" -> 3}, PlotLabel -> "Claw Graph", 
     VertexCoordinates -> {{1, -1}, {1, 0}, {1, 1}, {2, 0}}}], "   in   ", 
   Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
    Null, {{1, 2}, {2, 3}, {3, 4}, {4, 5}, {5, 6}, {6, 7}, {7, 8}, {8, 9}, {9,
      10}, {10, 1}, {8, 3}, {2, 4}, {3, 5}, {4, 6}, {5, 7}, {6, 8}, {7, 9}, {
     8, 10}, {9, 1}, {10, 2}}}, {
    GraphLayout -> {"Dimension" -> 3}, PlotLabel -> "G", PlotTheme -> 
     "Minimal"}]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.8562601945112696`*^9, {3.856260244192517*^9, 3.8562602526504927`*^9}, 
   3.856260336288384*^9, 3.856260838781176*^9, 3.856262704756874*^9},
 CellLabel->
  "During evaluation of \
In[294]:=",ExpressionUUID->"c63b0637-3697-43e7-b443-d15be1e08348"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.8562601944242697`*^9, {3.856260244245517*^9, 3.856260252704493*^9}, 
   3.8562603363433833`*^9, 3.8562608388561754`*^9, 3.8562627048168745`*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"5820a54f-4768-427d-a29d-5acca0a036c9"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.8562601944242697`*^9, {3.856260244245517*^9, 3.856260252704493*^9}, 
   3.8562603363433833`*^9, 3.8562608388561754`*^9, 3.8562627048208747`*^9},
 CellLabel->
  "Out[318]=",ExpressionUUID->"035de8e1-0efa-457f-b336-715bb3051db8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           InterpretationBox[
            TemplateBox[{"Root", 
              InterpretationBox[
               StyleBox[
                TemplateBox[{"\"4.06\"", 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "NumericalApproximationElider"]]}, 
                 "RowDefault"], ShowStringCharacters -> False], 
               4.05601728718540055496077911811880767345`15.954589770191003, 
               Editable -> False], 
              TagBox[
               RowBox[{"Root", "[", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"7", "-", 
                    RowBox[{"22", " ", "#1"}], "-", 
                    RowBox[{"129", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"34", " ", 
                    SuperscriptBox["#1", "3"]}], "+", 
                    RowBox[{"86", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"18", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{"17", " ", 
                    SuperscriptBox["#1", "6"]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["#1", "7"]}], "+", 
                    SuperscriptBox["#1", "8"]}], "&"}], ",", "8"}], "]"}], 
               Short[#, 7]& ], 4.0560172871854006`},
             "NumericalApproximation"],
            Root[
            7 - 22 # - 129 #^2 - 34 #^3 + 86 #^4 + 18 #^5 - 17 #^6 - 
             2 #^7 + #^8& , 8, 0]], ",", 
           InterpretationBox[
            TemplateBox[{"Root", 
              InterpretationBox[
               StyleBox[
                TemplateBox[{"\"-2.55\"", 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "NumericalApproximationElider"]]}, 
                 "RowDefault"], ShowStringCharacters -> 
                False], \
-2.5510985818873446184795739100081846118`15.954589770191003, Editable -> 
               False], 
              TagBox[
               RowBox[{"Root", "[", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"7", "-", 
                    RowBox[{"22", " ", "#1"}], "-", 
                    RowBox[{"129", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"34", " ", 
                    SuperscriptBox["#1", "3"]}], "+", 
                    RowBox[{"86", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"18", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{"17", " ", 
                    SuperscriptBox["#1", "6"]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["#1", "7"]}], "+", 
                    SuperscriptBox["#1", "8"]}], "&"}], ",", "1"}], "]"}], 
               Short[#, 7]& ], -2.5510985818873446`},
             "NumericalApproximation"],
            Root[
            7 - 22 # - 129 #^2 - 34 #^3 + 86 #^4 + 18 #^5 - 17 #^6 - 
             2 #^7 + #^8& , 1, 0]], ",", 
           InterpretationBox[
            TemplateBox[{"Root", 
              InterpretationBox[
               StyleBox[
                TemplateBox[{"\"2.33\"", 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "NumericalApproximationElider"]]}, 
                 "RowDefault"], ShowStringCharacters -> False], 
               2.32776902503114113685001029807608574629`15.954589770191003, 
               Editable -> False], 
              TagBox[
               RowBox[{"Root", "[", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"7", "-", 
                    RowBox[{"22", " ", "#1"}], "-", 
                    RowBox[{"129", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"34", " ", 
                    SuperscriptBox["#1", "3"]}], "+", 
                    RowBox[{"86", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"18", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{"17", " ", 
                    SuperscriptBox["#1", "6"]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["#1", "7"]}], "+", 
                    SuperscriptBox["#1", "8"]}], "&"}], ",", "7"}], "]"}], 
               Short[#, 7]& ], 2.327769025031141},
             "NumericalApproximation"],
            Root[
            7 - 22 # - 129 #^2 - 34 #^3 + 86 #^4 + 18 #^5 - 17 #^6 - 
             2 #^7 + #^8& , 7, 0]], ",", 
           InterpretationBox[
            TemplateBox[{"Root", 
              InterpretationBox[
               StyleBox[
                TemplateBox[{"\"-2.20\"", 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "NumericalApproximationElider"]]}, 
                 "RowDefault"], ShowStringCharacters -> 
                False], \
-2.20112047642819952386616932926699519157`15.954589770191003, Editable -> 
               False], 
              TagBox[
               RowBox[{"Root", "[", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"7", "-", 
                    RowBox[{"22", " ", "#1"}], "-", 
                    RowBox[{"129", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"34", " ", 
                    SuperscriptBox["#1", "3"]}], "+", 
                    RowBox[{"86", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"18", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{"17", " ", 
                    SuperscriptBox["#1", "6"]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["#1", "7"]}], "+", 
                    SuperscriptBox["#1", "8"]}], "&"}], ",", "2"}], "]"}], 
               Short[#, 7]& ], -2.2011204764281995`},
             "NumericalApproximation"],
            Root[
            7 - 22 # - 129 #^2 - 34 #^3 + 86 #^4 + 18 #^5 - 17 #^6 - 
             2 #^7 + #^8& , 2, 0]], ",", 
           InterpretationBox[
            TemplateBox[{"Root", 
              InterpretationBox[
               StyleBox[
                TemplateBox[{"\"1.78\"", 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "NumericalApproximationElider"]]}, 
                 "RowDefault"], ShowStringCharacters -> False], 
               1.78371382805759948197987796447705477476`15.954589770191003, 
               Editable -> False], 
              TagBox[
               RowBox[{"Root", "[", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"7", "-", 
                    RowBox[{"22", " ", "#1"}], "-", 
                    RowBox[{"129", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"34", " ", 
                    SuperscriptBox["#1", "3"]}], "+", 
                    RowBox[{"86", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"18", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{"17", " ", 
                    SuperscriptBox["#1", "6"]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["#1", "7"]}], "+", 
                    SuperscriptBox["#1", "8"]}], "&"}], ",", "6"}], "]"}], 
               Short[#, 7]& ], 1.7837138280575995`},
             "NumericalApproximation"],
            Root[
            7 - 22 # - 129 #^2 - 34 #^3 + 86 #^4 + 18 #^5 - 17 #^6 - 
             2 #^7 + #^8& , 6, 0]], ",", 
           InterpretationBox[
            TemplateBox[{"Root", 
              InterpretationBox[
               StyleBox[
                TemplateBox[{"\"-1.19\"", 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "NumericalApproximationElider"]]}, 
                 "RowDefault"], ShowStringCharacters -> 
                False], \
-1.19234241938084406520204083790304139256`15.954589770191003, Editable -> 
               False], 
              TagBox[
               RowBox[{"Root", "[", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"7", "-", 
                    RowBox[{"22", " ", "#1"}], "-", 
                    RowBox[{"129", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"34", " ", 
                    SuperscriptBox["#1", "3"]}], "+", 
                    RowBox[{"86", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"18", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{"17", " ", 
                    SuperscriptBox["#1", "6"]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["#1", "7"]}], "+", 
                    SuperscriptBox["#1", "8"]}], "&"}], ",", "3"}], "]"}], 
               Short[#, 7]& ], -1.192342419380844},
             "NumericalApproximation"],
            Root[
            7 - 22 # - 129 #^2 - 34 #^3 + 86 #^4 + 18 #^5 - 17 #^6 - 
             2 #^7 + #^8& , 3, 0]], ",", 
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}], ",", 
           InterpretationBox[
            TemplateBox[{"Root", 
              InterpretationBox[
               StyleBox[
                TemplateBox[{"\"-0.384\"", 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "NumericalApproximationElider"]]}, 
                 "RowDefault"], ShowStringCharacters -> 
                False], \
-0.38442859272251150848376255453331395984`15.954589770191003, Editable -> 
               False], 
              TagBox[
               RowBox[{"Root", "[", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"7", "-", 
                    RowBox[{"22", " ", "#1"}], "-", 
                    RowBox[{"129", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"34", " ", 
                    SuperscriptBox["#1", "3"]}], "+", 
                    RowBox[{"86", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"18", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{"17", " ", 
                    SuperscriptBox["#1", "6"]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["#1", "7"]}], "+", 
                    SuperscriptBox["#1", "8"]}], "&"}], ",", "4"}], "]"}], 
               Short[#, 7]& ], -0.3844285927225115},
             "NumericalApproximation"],
            Root[
            7 - 22 # - 129 #^2 - 34 #^3 + 86 #^4 + 18 #^5 - 17 #^6 - 
             2 #^7 + #^8& , 4, 0]], ",", 
           InterpretationBox[
            TemplateBox[{"Root", 
              InterpretationBox[
               StyleBox[
                TemplateBox[{"\"0.161\"", 
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEExpressions", "NumericalApproximationElider"]]}, 
                 "RowDefault"], ShowStringCharacters -> False], 
               0.16148993014475859775203048229741398245`15.954589770191003, 
               Editable -> False], 
              TagBox[
               RowBox[{"Root", "[", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"7", "-", 
                    RowBox[{"22", " ", "#1"}], "-", 
                    RowBox[{"129", " ", 
                    SuperscriptBox["#1", "2"]}], "-", 
                    RowBox[{"34", " ", 
                    SuperscriptBox["#1", "3"]}], "+", 
                    RowBox[{"86", " ", 
                    SuperscriptBox["#1", "4"]}], "+", 
                    RowBox[{"18", " ", 
                    SuperscriptBox["#1", "5"]}], "-", 
                    RowBox[{"17", " ", 
                    SuperscriptBox["#1", "6"]}], "-", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["#1", "7"]}], "+", 
                    SuperscriptBox["#1", "8"]}], "&"}], ",", "5"}], "]"}], 
               Short[#, 7]& ], 0.1614899301447586},
             "NumericalApproximation"],
            Root[
            7 - 22 # - 129 #^2 - 34 #^3 + 86 #^4 + 18 #^5 - 17 #^6 - 
             2 #^7 + #^8& , 5, 0]]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{98.419921875, {5., 14.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{79.76953125, {1., 14.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 322, 29669476547487077234, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{93.4716796875, {1., 14.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 322, 29669476547487077234, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{68.994140625, {1., 14.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 322, 29669476547487077234, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{119.4609375, {1., 14.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{119.4609375, {1., 14.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[29669476547487077234 === $SessionID, 
   Out[322], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{
  3.8562601944242697`*^9, {3.856260244245517*^9, 3.856260252704493*^9}, 
   3.8562603363433833`*^9, 3.8562608388561754`*^9, 3.8562627049028745`*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"81993faf-fd0a-42c6-ac37-f27d38d814ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"numberOfTriangels", " ", "=", " ", 
  RowBox[{"Length", "[", 
   RowBox[{"IGTriangles", "[", "g", "]"}], "]"}]}]], "Input",
 CellLabel->
  "In[326]:=",ExpressionUUID->"2ea26925-ca46-44f2-b819-ba773948bccf"],

Cell[BoxData["9"], "Output",
 CellChangeTimes->{3.856262730482273*^9},
 CellLabel->
  "Out[326]=",ExpressionUUID->"c18710d5-12cc-48a7-a385-8d7d1cb12536"]
}, Open  ]]
},
WindowSize->{1267., 695.5},
WindowMargins->{{Automatic, -26}, {-1.5, Automatic}},
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (February 4, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"60cfd2bd-0019-431f-a27a-da629a819987"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 8802, 268, 549, "Input",ExpressionUUID->"fbdc603c-d5f2-4a03-87b6-82d48a114c5f"],
Cell[9385, 292, 590, 12, 125, "Output",ExpressionUUID->"29c705c8-6945-4b00-8773-8a054c442b4a"]
}, Open  ]],
Cell[9990, 307, 452, 6, 56, "Input",ExpressionUUID->"c0f7471e-59d5-4c06-9f54-d7c8a1678db7"],
Cell[CellGroupData[{
Cell[10467, 317, 199975, 3438, 5400, "Input",ExpressionUUID->"6c7027af-b1d0-4477-bd26-7f86ee57ae0a"],
Cell[210445, 3757, 5193, 107, 182, "Print",ExpressionUUID->"c63b0637-3697-43e7-b443-d15be1e08348"],
Cell[215641, 3866, 284, 5, 88, "Output",ExpressionUUID->"5820a54f-4768-427d-a29d-5acca0a036c9"],
Cell[215928, 3873, 283, 5, 88, "Output",ExpressionUUID->"035de8e1-0efa-457f-b336-715bb3051db8"],
Cell[216214, 3880, 21517, 516, 250, "Output",ExpressionUUID->"81993faf-fd0a-42c6-ac37-f27d38d814ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237768, 4401, 230, 5, 80, "Input",ExpressionUUID->"2ea26925-ca46-44f2-b819-ba773948bccf"],
Cell[238001, 4408, 153, 3, 88, "Output",ExpressionUUID->"c18710d5-12cc-48a7-a385-8d7d1cb12536"]
}, Open  ]]
}
]
*)

